{"version":3,"sources":["../../../../../../src/cdk/drag-drop/drag-styling.ts","../../../../../../src/cdk/drag-drop/transition-duration.ts","../../../../../../src/cdk/drag-drop/client-rect.ts","../../../../../../src/cdk/drag-drop/parent-position-tracker.ts","../../../../../../src/cdk/drag-drop/clone-node.ts","../../../../../../src/cdk/drag-drop/drag-ref.ts","../../../../../../src/cdk/drag-drop/drag-utils.ts","../../../../../../src/cdk/drag-drop/drop-list-ref.ts","../../../../../../src/cdk/drag-drop/drag-drop-registry.ts","../../../../../../src/cdk/drag-drop/drag-drop.ts","../../../../../../src/cdk/drag-drop/drag-parent.ts","../../../../../../src/cdk/drag-drop/drag-events.ts","../../../../../../src/cdk/drag-drop/directives/drop-list-group.ts","../../../../../../src/cdk/drag-drop/directives/config.ts","../../../../../../src/cdk/drag-drop/directives/drop-list.ts","../../../../../../src/cdk/drag-drop/directives/drag-handle.ts","../../../../../../src/cdk/drag-drop/directives/drag-placeholder.ts","../../../../../../src/cdk/drag-drop/directives/drag-preview.ts","../../../../../../src/cdk/drag-drop/directives/drag.ts","../../../../../../src/cdk/drag-drop/drag-drop-module.ts","../../../../../../src/cdk/drag-drop/public-api.ts","../../../../../../src/cdk/drag-drop/index.ts","./src/app/profile/models/house.ts","./src/app/profile/components/kanban/kanban.component.html","./src/app/profile/charts/charts.component.css","./src/app/profile/components/house/house.component.html","./src/app/profile/components/dashboard/dashboard.component.ts","./src/app/profile/components/to-do/to-do.component.ts","./src/app/profile/charts/charts.component.ts","./src/app/profile/components/dialogs/dialogs.scss","./src/app/profile/components/kanban/kanban.component.ts","./src/app/profile/components/kanban/kanban.component.scss","./src/app/profile/components/stats/stats.component.html","./src/app/profile/components/to-do/to-do.component.css","./src/app/profile/profile.module.ts","./src/app/profile/components/house/house.component.ts","./src/app/profile/components/stats/stats.component.ts","./src/app/profile/components/dialogs/tenant-dialog.component.ts","./src/app/profile/components/dialogs/house-dialog.component.ts","./src/app/profile/services/house.service.ts","./src/app/profile/components/to-do/to-do.component.html","./src/app/profile/models/stats.ts","./src/app/profile/components/house/house.component.scss","./src/app/profile/components/dialogs/delete.component.ts","./node_modules/chartist/dist/chartist.js","./src/app/profile/profile-routing.module.ts","./src/app/profile/components/dashboard/dashboard.component.css","./src/app/profile/charts/charts.component.html","./src/app/profile/components/stats/stats.component.css","./src/app/profile/components/dashboard/dashboard.component.html"],"names":["clamp","root","factory","define","Chartist","version","globalRoot","window","document","namespaces","svg","xmlns","xhtml","xlink","ct","noop","n","alphaNumerate","String","fromCharCode","extend","target","i","source","sourceProp","arguments","length","prop","Array","replaceAll","str","subStr","newSubStr","replace","RegExp","ensureUnit","value","unit","quantity","input","match","exec","undefined","querySelector","query","Node","times","apply","sum","previous","current","mapMultiply","factor","num","mapAdd","addend","serialMap","arr","cb","result","Math","max","map","e","forEach","index","args","roundWithPrecision","digits","precision","pow","round","escapingMap","serialize","data","JSON","stringify","Object","keys","reduce","key","deserialize","parse","createSvg","container","width","height","className","prototype","slice","call","querySelectorAll","filter","filterChartistSvgObjects","getAttributeNS","removePreviousElement","removeChild","Svg","attr","addClass","_node","style","appendChild","normalizeData","reverse","multi","labelCount","output","raw","normalized","series","getDataArray","every","labels","push","reverseData","safeHasProperty","object","property","hasOwnProperty","isDataHoleValue","isNaN","recursiveConvert","multiValue","getNumberOrUndefined","y","x","normalizePadding","padding","fallback","top","right","bottom","left","getMetaData","meta","orderOfMagnitude","floor","log","abs","LN10","projectLength","axisLength","bounds","range","getAvailableHeight","options","chartPadding","axisX","offset","getHighLow","dimension","toUpperCase","highLow","high","Number","MAX_VALUE","low","findHigh","findLow","recursiveHighLow","referenceValue","min","isNumeric","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","p","q","f","x1","x2","divisor","getBounds","scaleMinSpace","onlyInteger","optimizationCounter","newMin","newMax","valueRange","oom","step","ceil","numberOfSteps","scaleUp","smallestFactor","Error","EPSILON","safeIncrement","increment","values","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","chartRect","y1","y2","position","createGrid","axis","group","classes","eventEmitter","positionalData","units","pos","counterUnits","gridElement","elem","join","emit","type","element","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","len","content","createElement","setAttribute","innerText","foreignObject","text","getSeriesOption","name","seriesOptions","optionsProvider","responsiveOptions","baseOptions","currentOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","mql","matchMedia","matches","removeMediaQueryListeners","removeListener","addListener","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","defaultOptions","increasingX","fillHoles","segments","hole","global","Interpolation","none","path","Path","currX","currY","currData","move","line","simple","d","prevX","prevY","prevData","curve","cardinal","tension","t","c","paths","segment","z","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","handlers","addEventHandler","event","handler","removeEventHandler","splice","indexOf","starHandler","listToArray","list","properties","superProtoOverride","superProto","Class","proto","create","cloneDefinitions","constr","fn","constructor","instance","super","getOwnPropertyNames","propName","defineProperty","getOwnPropertyDescriptor","update","override","initializeTimeoutId","createChart","detach","removeEventListener","resizeListener","clearTimeout","on","off","initialize","addEventListener","bind","plugins","plugin","Base","supportsForeignObject","isSupported","supportsAnimations","__chartist__","setTimeout","attributes","parent","insertFirst","Element","createElementNS","firstChild","insertBefore","ns","getAttribute","namespacedAttribute","split","setAttributeNS","parentNode","SVGElement","node","nodeName","selector","foundNode","foundNodes","List","getNode","innerHTML","fnObj","createTextNode","empty","remove","newElement","replaceChild","append","trim","names","concat","self","removeClass","removedClasses","removeAllClasses","getBoundingClientRect","animate","animations","guided","createAnimateForAttributes","attribute","createAnimate","animationDefinition","attributeProperties","timeout","easing","Easing","begin","dur","calcMode","keySplines","keyTimes","fill","from","attributeName","beginElement","err","to","handleBeginEvent","params","handleEndEvent","feature","implementation","hasFeature","easingCubicBeziers","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","SvgList","nodeList","svgElements","prototypeProperty","elementDescriptions","m","l","a","accuracy","command","pathElements","relative","pathElement","toLowerCase","forEachParam","pathElementIndex","paramName","paramIndex","SvgPath","close","count","arc","rx","ry","xAr","lAf","sf","chunks","pop","elements","chunk","shift","description","spliceArgs","accuracyMultiplier","scale","translate","transform","transformFnc","transformed","clone","cloneElements","splitByCommand","joinedPath","j","axisUnits","dir","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelLength","showGrid","classNames","grid","showLabel","label","AutoScaleAxis","axisUnit","FixedScaleAxis","sort","b","stepLength","StepAxis","calc","stretch","showLine","showPoint","showArea","areaBase","lineSmooth","showGridBackground","fullWidth","chart","point","area","vertical","horizontal","start","end","seriesGroup","seriesIndex","seriesElement","pathData","valueIndex","smoothing","seriesMeta","areaBaseProjected","onlySolidSegments","pathSegment","convertToArea","solidPathSegments","firstElement","lastElement","createArea","areaPath","Line","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","serialSums","prev","curr","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","biPol","periodHalfLength","projected","previousStack","labelAxisValueIndex","positions","metaData","Bar","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","total","donut","donutSolid","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","direction","toTheRight","seriesGroups","labelsGroup","labelRadius","totalDataSum","previousValue","currentValue","hasSingleValInSeries","val","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","rawValue","interpolatedValue","dx","dy","Pie"],"mappings":"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","file":"profile-profile-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n// Helper type that ignores `readonly` properties. This is used in\n// `extendStyles` to ignore the readonly properties on CSSStyleDeclaration\n// since we won't be touching those anyway.\ntype Writeable<T> = { -readonly [P in keyof T]-?: T[P] };\n\n/**\n * Extended CSSStyleDeclaration that includes a couple of drag-related\n * properties that aren't in the built-in TS typings.\n */\nexport interface DragCSSStyleDeclaration extends CSSStyleDeclaration {\n  webkitUserDrag: string;\n  MozUserSelect: string; // For some reason the Firefox property is in PascalCase.\n  msScrollSnapType: string;\n  scrollSnapType: string;\n  msUserSelect: string;\n}\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nexport function extendStyles(\n    dest: Writeable<CSSStyleDeclaration>,\n    source: Partial<DragCSSStyleDeclaration>) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      dest[key] = source[key]!;\n    }\n  }\n\n  return dest;\n}\n\n\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nexport function toggleNativeDragInteractions(element: HTMLElement, enable: boolean) {\n  const userSelect = enable ? '' : 'none';\n\n  extendStyles(element.style, {\n    touchAction: enable ? '' : 'none',\n    webkitUserDrag: enable ? '' : 'none',\n    webkitTapHighlightColor: enable ? '' : 'transparent',\n    userSelect: userSelect,\n    msUserSelect: userSelect,\n    webkitUserSelect: userSelect,\n    MozUserSelect: userSelect\n  });\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value: string): number {\n  // Some browsers will return it in seconds, whereas others will return milliseconds.\n  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n  return parseFloat(value) * multiplier;\n}\n\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nexport function getTransformTransitionDurationInMs(element: HTMLElement): number {\n  const computedStyle = getComputedStyle(element);\n  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n\n  // If there's no transition for `all` or `transform`, we shouldn't do anything.\n  if (!property) {\n    return 0;\n  }\n\n  // Get the index of the property that we're interested in and match\n  // it up to the same index in `transition-delay` and `transition-duration`.\n  const propertyIndex = transitionedProperties.indexOf(property);\n  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n\n  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n         parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle: CSSStyleDeclaration, name: string): string[] {\n  const value = computedStyle.getPropertyValue(name);\n  return value.split(',').map(part => part.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nexport function getMutableClientRect(element: Element): ClientRect {\n  const clientRect = element.getBoundingClientRect();\n\n  // We need to clone the `clientRect` here, because all the values on it are readonly\n  // and we need to be able to update them. Also we can't use a spread here, because\n  // the values on a `ClientRect` aren't own properties. See:\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n  return {\n    top: clientRect.top,\n    right: clientRect.right,\n    bottom: clientRect.bottom,\n    left: clientRect.left,\n    width: clientRect.width,\n    height: clientRect.height\n  };\n}\n\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nexport function isInsideClientRect(clientRect: ClientRect, x: number, y: number) {\n  const {top, bottom, left, right} = clientRect;\n  return y >= top && y <= bottom && x >= left && x <= right;\n}\n\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nexport function adjustClientRect(clientRect: ClientRect, top: number, left: number) {\n  clientRect.top += top;\n  clientRect.bottom = clientRect.top + clientRect.height;\n\n  clientRect.left += left;\n  clientRect.right = clientRect.left + clientRect.width;\n}\n\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nexport function isPointerNearClientRect(rect: ClientRect,\n                                        threshold: number,\n                                        pointerX: number,\n                                        pointerY: number): boolean {\n  const {top, right, bottom, left, width, height} = rect;\n  const xThreshold = width * threshold;\n  const yThreshold = height * threshold;\n\n  return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n         pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {getMutableClientRect, adjustClientRect} from './client-rect';\n\n/** Object holding the scroll position of something. */\ninterface ScrollPosition {\n  top: number;\n  left: number;\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nexport class ParentPositionTracker {\n  /** Cached positions of the scrollable parent elements. */\n  readonly positions = new Map<Document|HTMLElement, {\n    scrollPosition: ScrollPosition,\n    clientRect?: ClientRect\n  }>();\n\n  constructor(private _document: Document, private _viewportRuler: ViewportRuler) {}\n\n  /** Clears the cached positions. */\n  clear() {\n    this.positions.clear();\n  }\n\n  /** Caches the positions. Should be called at the beginning of a drag sequence. */\n  cache(elements: HTMLElement[] | ReadonlyArray<HTMLElement>) {\n    this.clear();\n    this.positions.set(this._document, {\n      scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n    });\n\n    elements.forEach(element => {\n      this.positions.set(element, {\n        scrollPosition: {top: element.scrollTop, left: element.scrollLeft},\n        clientRect: getMutableClientRect(element)\n      });\n    });\n  }\n\n  /** Handles scrolling while a drag is taking place. */\n  handleScroll(event: Event): ScrollPosition | null {\n    const target = event.target as HTMLElement | Document;\n    const cachedPosition = this.positions.get(target);\n\n    if (!cachedPosition) {\n      return null;\n    }\n\n    // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n    // parent is the `document`, we use the `documentElement`, because IE doesn't support\n    // `contains` on the `document`.\n    const scrolledParentNode = target === this._document ? target.documentElement : target;\n    const scrollPosition = cachedPosition.scrollPosition;\n    let newTop: number;\n    let newLeft: number;\n\n    if (target === this._document) {\n      const viewportScrollPosition = this._viewportRuler!.getViewportScrollPosition();\n      newTop = viewportScrollPosition.top;\n      newLeft = viewportScrollPosition.left;\n    } else {\n      newTop = (target as HTMLElement).scrollTop;\n      newLeft = (target as HTMLElement).scrollLeft;\n    }\n\n    const topDifference = scrollPosition.top - newTop;\n    const leftDifference = scrollPosition.left - newLeft;\n\n    // Go through and update the cached positions of the scroll\n    // parents that are inside the element that was scrolled.\n    this.positions.forEach((position, node) => {\n      if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n        adjustClientRect(position.clientRect, topDifference, leftDifference);\n      }\n    });\n\n    scrollPosition.top = newTop;\n    scrollPosition.left = newLeft;\n\n    return {top: topDifference, left: leftDifference};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Creates a deep clone of an element. */\nexport function deepCloneNode(node: HTMLElement): HTMLElement {\n  const clone = node.cloneNode(true) as HTMLElement;\n  const descendantsWithId = clone.querySelectorAll('[id]');\n  const nodeName = node.nodeName.toLowerCase();\n\n  // Remove the `id` to avoid having multiple elements with the same id on the page.\n  clone.removeAttribute('id');\n\n  for (let i = 0; i < descendantsWithId.length; i++) {\n    descendantsWithId[i].removeAttribute('id');\n  }\n\n  if (nodeName === 'canvas') {\n    transferCanvasData(node as HTMLCanvasElement, clone as HTMLCanvasElement);\n  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n    transferInputData(node as HTMLInputElement, clone as HTMLInputElement);\n  }\n\n  transferData('canvas', node, clone, transferCanvasData);\n  transferData('input, textarea, select', node, clone, transferInputData);\n  return clone;\n}\n\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData<T extends Element>(selector: string, node: HTMLElement, clone: HTMLElement,\n                                         callback: (source: T, clone: T) => void) {\n  const descendantElements = node.querySelectorAll<T>(selector);\n\n  if (descendantElements.length) {\n    const cloneElements = clone.querySelectorAll<T>(selector);\n\n    for (let i = 0; i < descendantElements.length; i++) {\n      callback(descendantElements[i], cloneElements[i]);\n    }\n  }\n}\n\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source: Element & {value: string},\n                           clone: Element & {value: string; name: string; type: string}) {\n  clone.value = source.value;\n  // Radio button `name` attributes must be unique for radio button groups\n  // otherwise original radio buttons can lose their checked state\n  // once the clone is inserted in the DOM.\n  if (clone.type === 'radio' && clone.name) {\n    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n  }\n}\n\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source: HTMLCanvasElement, clone: HTMLCanvasElement) {\n  const context = clone.getContext('2d');\n\n  if (context) {\n    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n    // We can't do much about it so just ignore the error.\n    try {\n      context.drawImage(source, 0, 0);\n    } catch {}\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EmbeddedViewRef, ElementRef, NgZone, ViewContainerRef, TemplateRef} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {Direction} from '@angular/cdk/bidi';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {coerceBooleanProperty, coerceElement} from '@angular/cdk/coercion';\nimport {Subscription, Subject, Observable} from 'rxjs';\nimport {DropListRefInternal as DropListRef} from './drop-list-ref';\nimport {DragDropRegistry} from './drag-drop-registry';\nimport {extendStyles, toggleNativeDragInteractions} from './drag-styling';\nimport {getTransformTransitionDurationInMs} from './transition-duration';\nimport {getMutableClientRect, adjustClientRect} from './client-rect';\nimport {ParentPositionTracker} from './parent-position-tracker';\nimport {deepCloneNode} from './clone-node';\n\n/** Object that can be used to configure the behavior of DragRef. */\nexport interface DragRefConfig {\n  /**\n   * Minimum amount of pixels that the user should\n   * drag, before the CDK initiates a drag sequence.\n   */\n  dragStartThreshold: number;\n\n  /**\n   * Amount the pixels the user should drag before the CDK\n   * considers them to have changed the drag direction.\n   */\n  pointerDirectionChangeThreshold: number;\n\n  /** `z-index` for the absolutely-positioned elements that are created by the drag item. */\n  zIndex?: number;\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({passive: false});\n\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n\n// TODO(crisbeto): add an API for moving a draggable up/down the\n// list programmatically. Useful for keyboard controls.\n\n/**\n * Internal compile-time-only representation of a `DragRef`.\n * Used to avoid circular import issues between the `DragRef` and the `DropListRef`.\n * @docs-private\n */\nexport interface DragRefInternal extends DragRef {}\n\n/** Template that can be used to create a drag helper element (e.g. a preview or a placeholder). */\ninterface DragHelperTemplate<T = any> {\n  template: TemplateRef<T> | null;\n  viewContainer: ViewContainerRef;\n  context: T;\n}\n\n/** Template that can be used to create a drag preview element. */\ninterface DragPreviewTemplate<T = any> extends DragHelperTemplate<T> {\n  matchSize?: boolean;\n}\n\n/** Point on the page or within an element. */\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nexport class DragRef<T = any> {\n  /** Element displayed next to the user's pointer while the element is dragged. */\n  private _preview: HTMLElement;\n\n  /** Reference to the view of the preview element. */\n  private _previewRef: EmbeddedViewRef<any> | null;\n\n  /** Reference to the view of the placeholder element. */\n  private _placeholderRef: EmbeddedViewRef<any> | null;\n\n  /** Element that is rendered instead of the draggable item while it is being sorted. */\n  private _placeholder: HTMLElement;\n\n  /** Coordinates within the element at which the user picked up the element. */\n  private _pickupPositionInElement: Point;\n\n  /** Coordinates on the page at which the user picked up the element. */\n  private _pickupPositionOnPage: Point;\n\n  /**\n   * Anchor node used to save the place in the DOM where the element was\n   * picked up so that it can be restored at the end of the drag sequence.\n   */\n  private _anchor: Comment;\n\n  /**\n   * CSS `transform` applied to the element when it isn't being dragged. We need a\n   * passive transform in order for the dragged element to retain its new position\n   * after the user has stopped dragging and because we need to know the relative\n   * position in case they start dragging again. This corresponds to `element.style.transform`.\n   */\n  private _passiveTransform: Point = {x: 0, y: 0};\n\n  /** CSS `transform` that is applied to the element while it's being dragged. */\n  private _activeTransform: Point = {x: 0, y: 0};\n\n  /** Inline `transform` value that the element had before the first dragging sequence. */\n  private _initialTransform?: string;\n\n  /**\n   * Whether the dragging sequence has been started. Doesn't\n   * necessarily mean that the element has been moved.\n   */\n  private _hasStartedDragging: boolean;\n\n  /** Whether the element has moved since the user started dragging it. */\n  private _hasMoved: boolean;\n\n  /** Drop container in which the DragRef resided when dragging began. */\n  private _initialContainer: DropListRef;\n\n  /** Index at which the item started in its initial container. */\n  private _initialIndex: number;\n\n  /** Cached positions of scrollable parent elements. */\n  private _parentPositions: ParentPositionTracker;\n\n  /** Emits when the item is being moved. */\n  private _moveEvents = new Subject<{\n    source: DragRef;\n    pointerPosition: {x: number, y: number};\n    event: MouseEvent | TouchEvent;\n    distance: Point;\n    delta: {x: -1 | 0 | 1, y: -1 | 0 | 1};\n  }>();\n\n  /** Keeps track of the direction in which the user is dragging along each axis. */\n  private _pointerDirectionDelta: {x: -1 | 0 | 1, y: -1 | 0 | 1};\n\n  /** Pointer position at which the last change in the delta occurred. */\n  private _pointerPositionAtLastDirectionChange: Point;\n\n  /** Position of the pointer at the last pointer event. */\n  private _lastKnownPointerPosition: Point;\n\n  /**\n   * Root DOM node of the drag instance. This is the element that will\n   * be moved around as the user is dragging.\n   */\n  private _rootElement: HTMLElement;\n\n  /**\n   * Nearest ancestor SVG, relative to which coordinates are calculated if dragging SVGElement\n   */\n  private _ownerSVGElement: SVGSVGElement | null;\n\n  /**\n   * Inline style value of `-webkit-tap-highlight-color` at the time the\n   * dragging was started. Used to restore the value once we're done dragging.\n   */\n  private _rootElementTapHighlight: string;\n\n  /** Subscription to pointer movement events. */\n  private _pointerMoveSubscription = Subscription.EMPTY;\n\n  /** Subscription to the event that is dispatched when the user lifts their pointer. */\n  private _pointerUpSubscription = Subscription.EMPTY;\n\n  /** Subscription to the viewport being scrolled. */\n  private _scrollSubscription = Subscription.EMPTY;\n\n  /** Subscription to the viewport being resized. */\n  private _resizeSubscription = Subscription.EMPTY;\n\n  /**\n   * Time at which the last touch event occurred. Used to avoid firing the same\n   * events multiple times on touch devices where the browser will fire a fake\n   * mouse event for each touch event, after a certain time.\n   */\n  private _lastTouchEventTime: number;\n\n  /** Time at which the last dragging sequence was started. */\n  private _dragStartTime: number;\n\n  /** Cached reference to the boundary element. */\n  private _boundaryElement: HTMLElement | null = null;\n\n  /** Whether the native dragging interactions have been enabled on the root element. */\n  private _nativeInteractionsEnabled = true;\n\n  /** Cached dimensions of the preview element. */\n  private _previewRect?: ClientRect;\n\n  /** Cached dimensions of the boundary element. */\n  private _boundaryRect?: ClientRect;\n\n  /** Element that will be used as a template to create the draggable item's preview. */\n  private _previewTemplate?: DragPreviewTemplate | null;\n\n  /** Template for placeholder element rendered to show where a draggable would be dropped. */\n  private _placeholderTemplate?: DragHelperTemplate | null;\n\n  /** Elements that can be used to drag the draggable item. */\n  private _handles: HTMLElement[] = [];\n\n  /** Registered handles that are currently disabled. */\n  private _disabledHandles = new Set<HTMLElement>();\n\n  /** Droppable container that the draggable is a part of. */\n  private _dropContainer?: DropListRef;\n\n  /** Layout direction of the item. */\n  private _direction: Direction = 'ltr';\n\n  /** Axis along which dragging is locked. */\n  lockAxis: 'x' | 'y';\n\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  dragStartDelay: number | {touch: number, mouse: number} = 0;\n\n  /** Class to be added to the preview element. */\n  previewClass: string|string[]|undefined;\n\n  /** Whether starting to drag this element is disabled. */\n  get disabled(): boolean {\n    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._toggleNativeDragInteractions();\n    }\n  }\n  private _disabled = false;\n\n  /** Emits as the drag sequence is being prepared. */\n  beforeStarted = new Subject<void>();\n\n  /** Emits when the user starts dragging the item. */\n  started = new Subject<{source: DragRef}>();\n\n  /** Emits when the user has released a drag item, before any animations have started. */\n  released = new Subject<{source: DragRef}>();\n\n  /** Emits when the user stops dragging an item in the container. */\n  ended = new Subject<{source: DragRef, distance: Point}>();\n\n  /** Emits when the user has moved the item into a new container. */\n  entered = new Subject<{container: DropListRef, item: DragRef, currentIndex: number}>();\n\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  exited = new Subject<{container: DropListRef, item: DragRef}>();\n\n  /** Emits when the user drops the item inside a container. */\n  dropped = new Subject<{\n    previousIndex: number;\n    currentIndex: number;\n    item: DragRef;\n    container: DropListRef;\n    previousContainer: DropListRef;\n    distance: Point;\n    isPointerOverContainer: boolean;\n  }>();\n\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  moved: Observable<{\n    source: DragRef;\n    pointerPosition: {x: number, y: number};\n    event: MouseEvent | TouchEvent;\n    distance: Point;\n    delta: {x: -1 | 0 | 1, y: -1 | 0 | 1};\n  }> = this._moveEvents;\n\n  /** Arbitrary data that can be attached to the drag item. */\n  data: T;\n\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page and should return a point describing where the item should\n   * be rendered.\n   */\n  constrainPosition?: (point: Point, dragRef: DragRef) => Point;\n\n  constructor(\n    element: ElementRef<HTMLElement> | HTMLElement,\n    private _config: DragRefConfig,\n    private _document: Document,\n    private _ngZone: NgZone,\n    private _viewportRuler: ViewportRuler,\n    private _dragDropRegistry: DragDropRegistry<DragRef, DropListRef>) {\n\n    this.withRootElement(element);\n    this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    _dragDropRegistry.registerDragItem(this);\n  }\n\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement(): HTMLElement {\n    return this._placeholder;\n  }\n\n  /** Returns the root draggable element. */\n  getRootElement(): HTMLElement {\n    return this._rootElement;\n  }\n\n  /**\n   * Gets the currently-visible element that represents the drag item.\n   * While dragging this is the placeholder, otherwise it's the root element.\n   */\n  getVisibleElement(): HTMLElement {\n    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n  }\n\n  /** Registers the handles that can be used to drag the element. */\n  withHandles(handles: (HTMLElement | ElementRef<HTMLElement>)[]): this {\n    this._handles = handles.map(handle => coerceElement(handle));\n    this._handles.forEach(handle => toggleNativeDragInteractions(handle, false));\n    this._toggleNativeDragInteractions();\n    return this;\n  }\n\n  /**\n   * Registers the template that should be used for the drag preview.\n   * @param template Template that from which to stamp out the preview.\n   */\n  withPreviewTemplate(template: DragPreviewTemplate | null): this {\n    this._previewTemplate = template;\n    return this;\n  }\n\n  /**\n   * Registers the template that should be used for the drag placeholder.\n   * @param template Template that from which to stamp out the placeholder.\n   */\n  withPlaceholderTemplate(template: DragHelperTemplate | null): this {\n    this._placeholderTemplate = template;\n    return this;\n  }\n\n  /**\n   * Sets an alternate drag root element. The root element is the element that will be moved as\n   * the user is dragging. Passing an alternate root element is useful when trying to enable\n   * dragging on an element that you might not have access to.\n   */\n  withRootElement(rootElement: ElementRef<HTMLElement> | HTMLElement): this {\n    const element = coerceElement(rootElement);\n\n    if (element !== this._rootElement) {\n      if (this._rootElement) {\n        this._removeRootElementListeners(this._rootElement);\n      }\n\n      this._ngZone.runOutsideAngular(() => {\n        element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n      });\n      this._initialTransform = undefined;\n      this._rootElement = element;\n    }\n\n    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n      this._ownerSVGElement = this._rootElement.ownerSVGElement;\n    }\n\n    return this;\n  }\n\n  /**\n   * Element to which the draggable's position will be constrained.\n   */\n  withBoundaryElement(boundaryElement: ElementRef<HTMLElement> | HTMLElement | null): this {\n    this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n    this._resizeSubscription.unsubscribe();\n    if (boundaryElement) {\n      this._resizeSubscription = this._viewportRuler\n        .change(10)\n        .subscribe(() => this._containInsideBoundaryOnResize());\n    }\n    return this;\n  }\n\n  /** Removes the dragging functionality from the DOM element. */\n  dispose() {\n    this._removeRootElementListeners(this._rootElement);\n\n    // Do this check before removing from the registry since it'll\n    // stop being considered as dragged once it is removed.\n    if (this.isDragging()) {\n      // Since we move out the element to the end of the body while it's being\n      // dragged, we have to make sure that it's removed if it gets destroyed.\n      removeNode(this._rootElement);\n    }\n\n    removeNode(this._anchor);\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._dragDropRegistry.removeDragItem(this);\n    this._removeSubscriptions();\n    this.beforeStarted.complete();\n    this.started.complete();\n    this.released.complete();\n    this.ended.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this._moveEvents.complete();\n    this._handles = [];\n    this._disabledHandles.clear();\n    this._dropContainer = undefined;\n    this._resizeSubscription.unsubscribe();\n    this._parentPositions.clear();\n    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n        this._previewTemplate = this._anchor = null!;\n  }\n\n  /** Checks whether the element is currently being dragged. */\n  isDragging(): boolean {\n    return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n  }\n\n  /** Resets a standalone drag item to its initial position. */\n  reset(): void {\n    this._rootElement.style.transform = this._initialTransform || '';\n    this._activeTransform = {x: 0, y: 0};\n    this._passiveTransform = {x: 0, y: 0};\n  }\n\n  /**\n   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n   * @param handle Handle element that should be disabled.\n   */\n  disableHandle(handle: HTMLElement) {\n    if (this._handles.indexOf(handle) > -1) {\n      this._disabledHandles.add(handle);\n    }\n  }\n\n  /**\n   * Enables a handle, if it has been disabled.\n   * @param handle Handle element to be enabled.\n   */\n  enableHandle(handle: HTMLElement) {\n    this._disabledHandles.delete(handle);\n  }\n\n  /** Sets the layout direction of the draggable item. */\n  withDirection(direction: Direction): this {\n    this._direction = direction;\n    return this;\n  }\n\n  /** Sets the container that the item is part of. */\n  _withDropContainer(container: DropListRef) {\n    this._dropContainer = container;\n  }\n\n  /**\n   * Gets the current position in pixels the draggable outside of a drop container.\n   */\n  getFreeDragPosition(): Readonly<Point> {\n    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n    return {x: position.x, y: position.y};\n  }\n\n  /**\n   * Sets the current position in pixels the draggable outside of a drop container.\n   * @param value New position to be set.\n   */\n  setFreeDragPosition(value: Point): this {\n    this._activeTransform = {x: 0, y: 0};\n    this._passiveTransform.x = value.x;\n    this._passiveTransform.y = value.y;\n\n    if (!this._dropContainer) {\n      this._applyRootElementTransform(value.x, value.y);\n    }\n\n    return this;\n  }\n\n  /** Updates the item's sort order based on the last-known pointer position. */\n  _sortFromLastPointerPosition() {\n    const position = this._lastKnownPointerPosition;\n\n    if (position && this._dropContainer) {\n      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n    }\n  }\n\n  /** Unsubscribes from the global subscriptions. */\n  private _removeSubscriptions() {\n    this._pointerMoveSubscription.unsubscribe();\n    this._pointerUpSubscription.unsubscribe();\n    this._scrollSubscription.unsubscribe();\n  }\n\n  /** Destroys the preview element and its ViewRef. */\n  private _destroyPreview() {\n    if (this._preview) {\n      removeNode(this._preview);\n    }\n\n    if (this._previewRef) {\n      this._previewRef.destroy();\n    }\n\n    this._preview = this._previewRef = null!;\n  }\n\n  /** Destroys the placeholder element and its ViewRef. */\n  private _destroyPlaceholder() {\n    if (this._placeholder) {\n      removeNode(this._placeholder);\n    }\n\n    if (this._placeholderRef) {\n      this._placeholderRef.destroy();\n    }\n\n    this._placeholder = this._placeholderRef = null!;\n  }\n\n  /** Handler for the `mousedown`/`touchstart` events. */\n  private _pointerDown = (event: MouseEvent | TouchEvent) => {\n    this.beforeStarted.next();\n\n    // Delegate the event based on whether it started from a handle or the element itself.\n    if (this._handles.length) {\n      const targetHandle = this._handles.find(handle => {\n        const target = event.target;\n        return !!target && (target === handle || handle.contains(target as HTMLElement));\n      });\n\n      if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n        this._initializeDragSequence(targetHandle, event);\n      }\n    } else if (!this.disabled) {\n      this._initializeDragSequence(this._rootElement, event);\n    }\n  }\n\n  /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n  private _pointerMove = (event: MouseEvent | TouchEvent) => {\n    // Prevent the default action as early as possible in order to block\n    // native actions like dragging the selected text or images with the mouse.\n    event.preventDefault();\n    const pointerPosition = this._getPointerPositionOnPage(event);\n\n    if (!this._hasStartedDragging) {\n      const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n      const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n      const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n\n      // Only start dragging after the user has moved more than the minimum distance in either\n      // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n      // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n      // per pixel of movement (e.g. if the user moves their pointer quickly).\n      if (isOverThreshold) {\n        const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n        if (!isDelayElapsed) {\n          this._endDragSequence(event);\n          return;\n        }\n\n        // Prevent other drag sequences from starting while something in the container is still\n        // being dragged. This can happen while we're waiting for the drop animation to finish\n        // and can cause errors, because some elements might still be moving around.\n        if (!this._dropContainer || !this._dropContainer.isDragging()) {\n          this._hasStartedDragging = true;\n          this._ngZone.run(() => this._startDragSequence(event));\n        }\n      }\n\n      return;\n    }\n\n    // We only need the preview dimensions if we have a boundary element.\n    if (this._boundaryElement) {\n      // Cache the preview element rect if we haven't cached it already or if\n      // we cached it too early before the element dimensions were computed.\n      if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n        this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n      }\n    }\n\n    const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n    this._hasMoved = true;\n    this._lastKnownPointerPosition = pointerPosition;\n    this._updatePointerDirectionDelta(constrainedPointerPosition);\n\n    if (this._dropContainer) {\n      this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n    } else {\n      const activeTransform = this._activeTransform;\n      activeTransform.x =\n          constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n      activeTransform.y =\n          constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n\n      this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n\n      // Apply transform as attribute if dragging and svg element to work for IE\n      if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n        const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n        this._rootElement.setAttribute('transform', appliedTransform);\n      }\n    }\n\n    // Since this event gets fired for every pixel while dragging, we only\n    // want to fire it if the consumer opted into it. Also we have to\n    // re-enter the zone because we run all of the events on the outside.\n    if (this._moveEvents.observers.length) {\n      this._ngZone.run(() => {\n        this._moveEvents.next({\n          source: this,\n          pointerPosition: constrainedPointerPosition,\n          event,\n          distance: this._getDragDistance(constrainedPointerPosition),\n          delta: this._pointerDirectionDelta\n        });\n      });\n    }\n  }\n\n  /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n  private _pointerUp = (event: MouseEvent | TouchEvent) => {\n    this._endDragSequence(event);\n  }\n\n  /**\n   * Clears subscriptions and stops the dragging sequence.\n   * @param event Browser event object that ended the sequence.\n   */\n  private _endDragSequence(event: MouseEvent | TouchEvent) {\n    // Note that here we use `isDragging` from the service, rather than from `this`.\n    // The difference is that the one from the service reflects whether a dragging sequence\n    // has been initiated, whereas the one on `this` includes whether the user has passed\n    // the minimum dragging threshold.\n    if (!this._dragDropRegistry.isDragging(this)) {\n      return;\n    }\n\n    this._removeSubscriptions();\n    this._dragDropRegistry.stopDragging(this);\n    this._toggleNativeDragInteractions();\n\n    if (this._handles) {\n      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n    }\n\n    if (!this._hasStartedDragging) {\n      return;\n    }\n\n    this.released.next({source: this});\n\n    if (this._dropContainer) {\n      // Stop scrolling immediately, instead of waiting for the animation to finish.\n      this._dropContainer._stopScrolling();\n      this._animatePreviewToPlaceholder().then(() => {\n        this._cleanupDragArtifacts(event);\n        this._cleanupCachedDimensions();\n        this._dragDropRegistry.stopDragging(this);\n      });\n    } else {\n      // Convert the active transform into a passive one. This means that next time\n      // the user starts dragging the item, its position will be calculated relatively\n      // to the new passive transform.\n      this._passiveTransform.x = this._activeTransform.x;\n      this._passiveTransform.y = this._activeTransform.y;\n      this._ngZone.run(() => {\n        this.ended.next({\n          source: this,\n          distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n        });\n      });\n      this._cleanupCachedDimensions();\n      this._dragDropRegistry.stopDragging(this);\n    }\n  }\n\n  /** Starts the dragging sequence. */\n  private _startDragSequence(event: MouseEvent | TouchEvent) {\n    if (isTouchEvent(event)) {\n      this._lastTouchEventTime = Date.now();\n    }\n\n    this._toggleNativeDragInteractions();\n\n    const dropContainer = this._dropContainer;\n\n    if (dropContainer) {\n      const element = this._rootElement;\n      const parent = element.parentNode!;\n      const preview = this._preview = this._createPreviewElement();\n      const placeholder = this._placeholder = this._createPlaceholderElement();\n      const anchor = this._anchor = this._anchor || this._document.createComment('');\n\n      // Insert an anchor node so that we can restore the element's position in the DOM.\n      parent.insertBefore(anchor, element);\n\n      // We move the element out at the end of the body and we make it hidden, because keeping it in\n      // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n      element.style.display = 'none';\n      this._document.body.appendChild(parent.replaceChild(placeholder, element));\n      getPreviewInsertionPoint(this._document).appendChild(preview);\n      this.started.next({source: this}); // Emit before notifying the container.\n      dropContainer.start();\n      this._initialContainer = dropContainer;\n      this._initialIndex = dropContainer.getItemIndex(this);\n    } else {\n      this.started.next({source: this});\n      this._initialContainer = this._initialIndex = undefined!;\n    }\n\n    // Important to run after we've called `start` on the parent container\n    // so that it has had time to resolve its scrollable parents.\n    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n  }\n\n  /**\n   * Sets up the different variables and subscriptions\n   * that will be necessary for the dragging sequence.\n   * @param referenceElement Element that started the drag sequence.\n   * @param event Browser event object that started the sequence.\n   */\n  private _initializeDragSequence(referenceElement: HTMLElement, event: MouseEvent | TouchEvent) {\n    // Always stop propagation for the event that initializes\n    // the dragging sequence, in order to prevent it from potentially\n    // starting another sequence for a draggable parent somewhere up the DOM tree.\n    event.stopPropagation();\n\n    const isDragging = this.isDragging();\n    const isTouchSequence = isTouchEvent(event);\n    const isAuxiliaryMouseButton = !isTouchSequence && (event as MouseEvent).button !== 0;\n    const rootElement = this._rootElement;\n    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n      this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n\n    // If the event started from an element with the native HTML drag&drop, it'll interfere\n    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n    // events from firing on touch devices.\n    if (event.target && (event.target as HTMLElement).draggable && event.type === 'mousedown') {\n      event.preventDefault();\n    }\n\n    // Abort if the user is already dragging or is using a mouse button other than the primary one.\n    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n      return;\n    }\n\n    // If we've got handles, we need to disable the tap highlight on the entire root element,\n    // otherwise iOS will still add it, even though all the drag interactions on the handle\n    // are disabled.\n    if (this._handles.length) {\n      this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n      rootElement.style.webkitTapHighlightColor = 'transparent';\n    }\n\n    this._hasStartedDragging = this._hasMoved = false;\n\n    // Avoid multiple subscriptions and memory leaks when multi touch\n    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n    this._removeSubscriptions();\n    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n    this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n      this._updateOnScroll(scrollEvent);\n    });\n\n    if (this._boundaryElement) {\n      this._boundaryRect = getMutableClientRect(this._boundaryElement);\n    }\n\n    // If we have a custom preview we can't know ahead of time how large it'll be so we position\n    // it next to the cursor. The exception is when the consumer has opted into making the preview\n    // the same size as the root element, in which case we do know the size.\n    const previewTemplate = this._previewTemplate;\n    this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n      !previewTemplate.matchSize ? {x: 0, y: 0} :\n      this._getPointerPositionInElement(referenceElement, event);\n    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n        this._getPointerPositionOnPage(event);\n    this._pointerDirectionDelta = {x: 0, y: 0};\n    this._pointerPositionAtLastDirectionChange = {x: pointerPosition.x, y: pointerPosition.y};\n    this._dragStartTime = Date.now();\n    this._dragDropRegistry.startDragging(this, event);\n  }\n\n  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n  private _cleanupDragArtifacts(event: MouseEvent | TouchEvent) {\n    // Restore the element's visibility and insert it at its old position in the DOM.\n    // It's important that we maintain the position, because moving the element around in the DOM\n    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n    // while moving the existing elements in all other cases.\n    this._rootElement.style.display = '';\n    this._anchor.parentNode!.replaceChild(this._rootElement, this._anchor);\n\n    this._destroyPreview();\n    this._destroyPlaceholder();\n    this._boundaryRect = this._previewRect = undefined;\n\n    // Re-enter the NgZone since we bound `document` events on the outside.\n    this._ngZone.run(() => {\n      const container = this._dropContainer!;\n      const currentIndex = container.getItemIndex(this);\n      const pointerPosition = this._getPointerPositionOnPage(event);\n      const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n      const isPointerOverContainer = container._isOverContainer(\n        pointerPosition.x, pointerPosition.y);\n\n      this.ended.next({source: this, distance});\n      this.dropped.next({\n        item: this,\n        currentIndex,\n        previousIndex: this._initialIndex,\n        container: container,\n        previousContainer: this._initialContainer,\n        isPointerOverContainer,\n        distance\n      });\n      container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance,\n          this._initialIndex);\n      this._dropContainer = this._initialContainer;\n    });\n  }\n\n  /**\n   * Updates the item's position in its drop container, or moves it\n   * into a new one, depending on its current drag position.\n   */\n  private _updateActiveDropContainer({x, y}: Point, {x: rawX, y: rawY}: Point) {\n    // Drop container that draggable has been moved into.\n    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n\n    // If we couldn't find a new container to move the item into, and the item has left its\n    // initial container, check whether the it's over the initial container. This handles the\n    // case where two containers are connected one way and the user tries to undo dragging an\n    // item into a new container.\n    if (!newContainer && this._dropContainer !== this._initialContainer &&\n        this._initialContainer._isOverContainer(x, y)) {\n      newContainer = this._initialContainer;\n    }\n\n    if (newContainer && newContainer !== this._dropContainer) {\n      this._ngZone.run(() => {\n        // Notify the old container that the item has left.\n        this.exited.next({item: this, container: this._dropContainer!});\n        this._dropContainer!.exit(this);\n        // Notify the new container that the item has entered.\n        this._dropContainer = newContainer!;\n        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n            // If we're re-entering the initial container and sorting is disabled,\n            // put item the into its starting index to begin with.\n            newContainer.sortingDisabled ? this._initialIndex : undefined);\n        this.entered.next({\n          item: this,\n          container: newContainer!,\n          currentIndex: newContainer!.getItemIndex(this)\n        });\n      });\n    }\n\n    this._dropContainer!._startScrollingIfNecessary(rawX, rawY);\n    this._dropContainer!._sortItem(this, x, y, this._pointerDirectionDelta);\n    this._preview.style.transform =\n        getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n  }\n\n  /**\n   * Creates the element that will be rendered next to the user's pointer\n   * and will be used as a preview of the element that is being dragged.\n   */\n  private _createPreviewElement(): HTMLElement {\n    const previewConfig = this._previewTemplate;\n    const previewClass = this.previewClass;\n    const previewTemplate = previewConfig ? previewConfig.template : null;\n    let preview: HTMLElement;\n\n    if (previewTemplate && previewConfig) {\n      // Measure the element before we've inserted the preview\n      // since the insertion could throw off the measurement.\n      const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate,\n                                                                     previewConfig.context);\n      viewRef.detectChanges();\n      preview = getRootNode(viewRef, this._document);\n      this._previewRef = viewRef;\n      if (previewConfig.matchSize) {\n        matchElementSize(preview, rootRect!);\n      } else {\n        preview.style.transform =\n            getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n      }\n    } else {\n      const element = this._rootElement;\n      preview = deepCloneNode(element);\n      matchElementSize(preview, element.getBoundingClientRect());\n    }\n\n    extendStyles(preview.style, {\n      // It's important that we disable the pointer events on the preview, because\n      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n      pointerEvents: 'none',\n      // We have to reset the margin, because it can throw off positioning relative to the viewport.\n      margin: '0',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      zIndex: `${this._config.zIndex || 1000}`\n    });\n\n    toggleNativeDragInteractions(preview, false);\n    preview.classList.add('cdk-drag-preview');\n    preview.setAttribute('dir', this._direction);\n\n    if (previewClass) {\n      if (Array.isArray(previewClass)) {\n        previewClass.forEach(className => preview.classList.add(className));\n      } else {\n        preview.classList.add(previewClass);\n      }\n    }\n\n    return preview;\n  }\n\n  /**\n   * Animates the preview element from its current position to the location of the drop placeholder.\n   * @returns Promise that resolves when the animation completes.\n   */\n  private _animatePreviewToPlaceholder(): Promise<void> {\n    // If the user hasn't moved yet, the transitionend event won't fire.\n    if (!this._hasMoved) {\n      return Promise.resolve();\n    }\n\n    const placeholderRect = this._placeholder.getBoundingClientRect();\n\n    // Apply the class that adds a transition to the preview.\n    this._preview.classList.add('cdk-drag-animating');\n\n    // Move the preview to the placeholder position.\n    this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n\n    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n    // apply its style, we take advantage of the available info to figure out whether we need to\n    // bind the event in the first place.\n    const duration = getTransformTransitionDurationInMs(this._preview);\n\n    if (duration === 0) {\n      return Promise.resolve();\n    }\n\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        const handler = ((event: TransitionEvent) => {\n          if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n            this._preview.removeEventListener('transitionend', handler);\n            resolve();\n            clearTimeout(timeout);\n          }\n        }) as EventListenerOrEventListenerObject;\n\n        // If a transition is short enough, the browser might not fire the `transitionend` event.\n        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n        // fire if the transition hasn't completed when it was supposed to.\n        const timeout = setTimeout(handler as Function, duration * 1.5);\n        this._preview.addEventListener('transitionend', handler);\n      });\n    });\n  }\n\n  /** Creates an element that will be shown instead of the current element while dragging. */\n  private _createPlaceholderElement(): HTMLElement {\n    const placeholderConfig = this._placeholderTemplate;\n    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n    let placeholder: HTMLElement;\n\n    if (placeholderTemplate) {\n      this._placeholderRef = placeholderConfig!.viewContainer.createEmbeddedView(\n        placeholderTemplate,\n        placeholderConfig!.context\n      );\n      this._placeholderRef.detectChanges();\n      placeholder = getRootNode(this._placeholderRef, this._document);\n    } else {\n      placeholder = deepCloneNode(this._rootElement);\n    }\n\n    placeholder.classList.add('cdk-drag-placeholder');\n    return placeholder;\n  }\n\n  /**\n   * Figures out the coordinates at which an element was picked up.\n   * @param referenceElement Element that initiated the dragging.\n   * @param event Event that initiated the dragging.\n   */\n  private _getPointerPositionInElement(referenceElement: HTMLElement,\n                                       event: MouseEvent | TouchEvent): Point {\n    const elementRect = this._rootElement.getBoundingClientRect();\n    const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n    const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n    const scrollPosition = this._getViewportScrollPosition();\n    const x = point.pageX - referenceRect.left - scrollPosition.left;\n    const y = point.pageY - referenceRect.top - scrollPosition.top;\n\n    return {\n      x: referenceRect.left - elementRect.left + x,\n      y: referenceRect.top - elementRect.top + y\n    };\n  }\n\n  /** Determines the point of the page that was touched by the user. */\n  private _getPointerPositionOnPage(event: MouseEvent | TouchEvent): Point {\n    const scrollPosition = this._getViewportScrollPosition();\n    const point = isTouchEvent(event) ?\n        // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n        // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n        // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n        // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n        // throwing an error. The value returned here will be incorrect, but since this only\n        // breaks inside a developer tool and the value is only used for secondary information,\n        // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n        (event.touches[0] || event.changedTouches[0] || {pageX: 0, pageY: 0}) : event;\n\n    const x = point.pageX - scrollPosition.left;\n    const y = point.pageY - scrollPosition.top;\n\n    // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n    // coordinate system\n    if (this._ownerSVGElement) {\n      const svgMatrix = this._ownerSVGElement.getScreenCTM();\n      if (svgMatrix) {\n        const svgPoint = this._ownerSVGElement.createSVGPoint();\n        svgPoint.x = x;\n        svgPoint.y = y;\n        return svgPoint.matrixTransform(svgMatrix.inverse());\n      }\n    }\n\n    return {x, y};\n  }\n\n\n  /** Gets the pointer position on the page, accounting for any position constraints. */\n  private _getConstrainedPointerPosition(point: Point): Point {\n    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n    let {x, y} = this.constrainPosition ? this.constrainPosition(point, this) : point;\n\n    if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n      y = this._pickupPositionOnPage.y;\n    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n      x = this._pickupPositionOnPage.x;\n    }\n\n    if (this._boundaryRect) {\n      const {x: pickupX, y: pickupY} = this._pickupPositionInElement;\n      const boundaryRect = this._boundaryRect;\n      const previewRect = this._previewRect!;\n      const minY = boundaryRect.top + pickupY;\n      const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n      const minX = boundaryRect.left + pickupX;\n      const maxX = boundaryRect.right - (previewRect.width - pickupX);\n\n      x = clamp(x, minX, maxX);\n      y = clamp(y, minY, maxY);\n    }\n\n    return {x, y};\n  }\n\n\n  /** Updates the current drag delta, based on the user's current pointer position on the page. */\n  private _updatePointerDirectionDelta(pointerPositionOnPage: Point) {\n    const {x, y} = pointerPositionOnPage;\n    const delta = this._pointerDirectionDelta;\n    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n\n    // Amount of pixels the user has dragged since the last time the direction changed.\n    const changeX = Math.abs(x - positionSinceLastChange.x);\n    const changeY = Math.abs(y - positionSinceLastChange.y);\n\n    // Because we handle pointer events on a per-pixel basis, we don't want the delta\n    // to change for every pixel, otherwise anything that depends on it can look erratic.\n    // To make the delta more consistent, we track how much the user has moved since the last\n    // delta change and we only update it after it has reached a certain threshold.\n    if (changeX > this._config.pointerDirectionChangeThreshold) {\n      delta.x = x > positionSinceLastChange.x ? 1 : -1;\n      positionSinceLastChange.x = x;\n    }\n\n    if (changeY > this._config.pointerDirectionChangeThreshold) {\n      delta.y = y > positionSinceLastChange.y ? 1 : -1;\n      positionSinceLastChange.y = y;\n    }\n\n    return delta;\n  }\n\n  /** Toggles the native drag interactions, based on how many handles are registered. */\n  private _toggleNativeDragInteractions() {\n    if (!this._rootElement || !this._handles) {\n      return;\n    }\n\n    const shouldEnable = this._handles.length > 0 || !this.isDragging();\n\n    if (shouldEnable !== this._nativeInteractionsEnabled) {\n      this._nativeInteractionsEnabled = shouldEnable;\n      toggleNativeDragInteractions(this._rootElement, shouldEnable);\n    }\n  }\n\n  /** Removes the manually-added event listeners from the root element. */\n  private _removeRootElementListeners(element: HTMLElement) {\n    element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n    element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n  }\n\n  /**\n   * Applies a `transform` to the root element, taking into account any existing transforms on it.\n   * @param x New transform value along the X axis.\n   * @param y New transform value along the Y axis.\n   */\n  private _applyRootElementTransform(x: number, y: number) {\n    const transform = getTransform(x, y);\n\n    // Cache the previous transform amount only after the first drag sequence, because\n    // we don't want our own transforms to stack on top of each other.\n    if (this._initialTransform == null) {\n      this._initialTransform = this._rootElement.style.transform || '';\n    }\n\n    // Preserve the previous `transform` value, if there was one. Note that we apply our own\n    // transform before the user's, because things like rotation can affect which direction\n    // the element will be translated towards.\n    this._rootElement.style.transform = this._initialTransform ?\n      transform + ' ' + this._initialTransform  : transform;\n  }\n\n  /**\n   * Gets the distance that the user has dragged during the current drag sequence.\n   * @param currentPosition Current position of the user's pointer.\n   */\n  private _getDragDistance(currentPosition: Point): Point {\n    const pickupPosition = this._pickupPositionOnPage;\n\n    if (pickupPosition) {\n      return {x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y};\n    }\n\n    return {x: 0, y: 0};\n  }\n\n  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n  private _cleanupCachedDimensions() {\n    this._boundaryRect = this._previewRect = undefined;\n    this._parentPositions.clear();\n  }\n\n  /**\n   * Checks whether the element is still inside its boundary after the viewport has been resized.\n   * If not, the position is adjusted so that the element fits again.\n   */\n  private _containInsideBoundaryOnResize() {\n    let {x, y} = this._passiveTransform;\n\n    if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n      return;\n    }\n\n    const boundaryRect = this._boundaryElement.getBoundingClientRect();\n    const elementRect = this._rootElement.getBoundingClientRect();\n\n    // It's possible that the element got hidden away after dragging (e.g. by switching to a\n    // different tab). Don't do anything in this case so we don't clear the user's position.\n    if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n        (elementRect.width === 0 && elementRect.height === 0)) {\n      return;\n    }\n\n    const leftOverflow = boundaryRect.left - elementRect.left;\n    const rightOverflow = elementRect.right - boundaryRect.right;\n    const topOverflow = boundaryRect.top - elementRect.top;\n    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n\n    // If the element has become wider than the boundary, we can't\n    // do much to make it fit so we just anchor it to the left.\n    if (boundaryRect.width > elementRect.width) {\n      if (leftOverflow > 0) {\n        x += leftOverflow;\n      }\n\n      if (rightOverflow > 0) {\n        x -= rightOverflow;\n      }\n    } else {\n      x = 0;\n    }\n\n    // If the element has become taller than the boundary, we can't\n    // do much to make it fit so we just anchor it to the top.\n    if (boundaryRect.height > elementRect.height) {\n      if (topOverflow > 0) {\n        y += topOverflow;\n      }\n\n      if (bottomOverflow > 0) {\n        y -= bottomOverflow;\n      }\n    } else {\n      y = 0;\n    }\n\n    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n      this.setFreeDragPosition({y, x});\n    }\n  }\n\n  /** Gets the drag start delay, based on the event type. */\n  private _getDragStartDelay(event: MouseEvent | TouchEvent): number {\n    const value = this.dragStartDelay;\n\n    if (typeof value === 'number') {\n      return value;\n    } else if (isTouchEvent(event)) {\n      return value.touch;\n    }\n\n    return value ? value.mouse : 0;\n  }\n\n  /** Updates the internal state of the draggable element when scrolling has occurred. */\n  private _updateOnScroll(event: Event) {\n    const scrollDifference = this._parentPositions.handleScroll(event);\n\n    if (scrollDifference) {\n      const target = event.target as Node;\n\n      // ClientRect dimensions are based on the scroll position of the page and its parent node so\n      // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n      // the `document` specifically since IE doesn't support `contains` on it.\n      if (this._boundaryRect && (target === this._document ||\n          (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n        adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n      }\n\n      this._pickupPositionOnPage.x += scrollDifference.left;\n      this._pickupPositionOnPage.y += scrollDifference.top;\n\n      // If we're in free drag mode, we have to update the active transform, because\n      // it isn't relative to the viewport like the preview inside a drop list.\n      if (!this._dropContainer) {\n        this._activeTransform.x -= scrollDifference.left;\n        this._activeTransform.y -= scrollDifference.top;\n        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n      }\n    }\n  }\n\n  /** Gets the scroll position of the viewport. */\n  private _getViewportScrollPosition() {\n    const cachedPosition = this._parentPositions.positions.get(this._document);\n    return cachedPosition ? cachedPosition.scrollPosition :\n        this._viewportRuler.getViewportScrollPosition();\n  }\n}\n\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x: number, y: number): string {\n  // Round the transforms since some browsers will\n  // blur the elements for sub-pixel transforms.\n  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node: Node | null) {\n  if (node && node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n}\n\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef: any): HTMLElement {\n  // We can't use the body if the user is in fullscreen mode,\n  // because the preview will render under the fullscreen element.\n  // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n  return documentRef.fullscreenElement ||\n         documentRef.webkitFullscreenElement ||\n         documentRef.mozFullScreenElement ||\n         documentRef.msFullscreenElement ||\n         documentRef.body;\n}\n\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef: EmbeddedViewRef<any>, _document: Document): HTMLElement {\n  const rootNodes: Node[] = viewRef.rootNodes;\n\n  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n    return rootNodes[0] as HTMLElement;\n  }\n\n  const wrapper = _document.createElement('div');\n  rootNodes.forEach(node => wrapper.appendChild(node));\n  return wrapper;\n}\n\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target: HTMLElement, sourceRect: ClientRect): void {\n  target.style.width = `${sourceRect.width}px`;\n  target.style.height = `${sourceRect.height}px`;\n  target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nexport function moveItemInArray<T = any>(array: T[], fromIndex: number, toIndex: number): void {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n\n  if (from === to) {\n    return;\n  }\n\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n\n  array[to] = target;\n}\n\n\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nexport function transferArrayItem<T = any>(currentArray: T[],\n                                           targetArray: T[],\n                                           currentIndex: number,\n                                           targetIndex: number): void {\n  const from = clamp(currentIndex, currentArray.length - 1);\n  const to = clamp(targetIndex, targetArray.length);\n\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n  }\n}\n\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nexport function copyArrayItem<T = any>(currentArray: T[],\n                                       targetArray: T[],\n                                       currentIndex: number,\n                                       targetIndex: number): void {\n  const to = clamp(targetIndex, targetArray.length);\n\n  if (currentArray.length) {\n    targetArray.splice(to, 0, currentArray[currentIndex]);\n  }\n}\n\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value: number, max: number): number {\n  return Math.max(0, Math.min(max, value));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {coerceElement} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {_getShadowRoot} from '@angular/cdk/platform';\nimport {Subject, Subscription, interval, animationFrameScheduler} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {moveItemInArray} from './drag-utils';\nimport {DragDropRegistry} from './drag-drop-registry';\nimport {DragRefInternal as DragRef, Point} from './drag-ref';\nimport {\n  isPointerNearClientRect,\n  adjustClientRect,\n  getMutableClientRect,\n  isInsideClientRect,\n} from './client-rect';\nimport {ParentPositionTracker} from './parent-position-tracker';\nimport {DragCSSStyleDeclaration} from './drag-styling';\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n\n/**\n * Entry in the position cache for draggable items.\n * @docs-private\n */\ninterface CachedItemPosition {\n  /** Instance of the drag item. */\n  drag: DragRef;\n  /** Dimensions of the item. */\n  clientRect: ClientRect;\n  /** Amount by which the item has been moved since dragging started. */\n  offset: number;\n}\n\n/** Vertical direction in which we can auto-scroll. */\nconst enum AutoScrollVerticalDirection {NONE, UP, DOWN}\n\n/** Horizontal direction in which we can auto-scroll. */\nconst enum AutoScrollHorizontalDirection {NONE, LEFT, RIGHT}\n\n/**\n * Internal compile-time-only representation of a `DropListRef`.\n * Used to avoid circular import issues between the `DropListRef` and the `DragRef`.\n * @docs-private\n */\nexport interface DropListRefInternal extends DropListRef {}\n\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nexport class DropListRef<T = any> {\n  /** Element that the drop list is attached to. */\n  element: HTMLElement | ElementRef<HTMLElement>;\n\n  /** Whether starting a dragging sequence from this container is disabled. */\n  disabled: boolean = false;\n\n  /** Whether sorting items within the list is disabled. */\n  sortingDisabled: boolean = false;\n\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  lockAxis: 'x' | 'y';\n\n  /**\n   * Whether auto-scrolling the view when the user\n   * moves their pointer close to the edges is disabled.\n   */\n  autoScrollDisabled: boolean = false;\n\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  enterPredicate: (drag: DragRef, drop: DropListRef) => boolean = () => true;\n\n  /** Emits right before dragging has started. */\n  beforeStarted = new Subject<void>();\n\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  entered = new Subject<{item: DragRef, container: DropListRef, currentIndex: number}>();\n\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  exited = new Subject<{item: DragRef, container: DropListRef}>();\n\n  /** Emits when the user drops an item inside the container. */\n  dropped = new Subject<{\n    item: DragRef,\n    currentIndex: number,\n    previousIndex: number,\n    container: DropListRef,\n    previousContainer: DropListRef,\n    isPointerOverContainer: boolean,\n    distance: Point;\n  }>();\n\n  /** Emits as the user is swapping items while actively dragging. */\n  sorted = new Subject<{\n    previousIndex: number,\n    currentIndex: number,\n    container: DropListRef,\n    item: DragRef\n  }>();\n\n  /** Arbitrary data that can be attached to the drop list. */\n  data: T;\n\n  /** Whether an item in the list is being dragged. */\n  private _isDragging = false;\n\n  /** Cache of the dimensions of all the items inside the container. */\n  private _itemPositions: CachedItemPosition[] = [];\n\n  /** Keeps track of the positions of any parent scrollable elements. */\n  private _parentPositions: ParentPositionTracker;\n\n  /** Cached `ClientRect` of the drop list. */\n  private _clientRect: ClientRect;\n\n  /**\n   * Draggable items that are currently active inside the container. Includes the items\n   * from `_draggables`, as well as any items that have been dragged in, but haven't\n   * been dropped yet.\n   */\n  private _activeDraggables: DragRef[];\n\n  /**\n   * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n   * the pointer was moving in when the swap occured and whether the user's pointer continued to\n   * overlap with the swapped item after the swapping occurred.\n   */\n  private _previousSwap = {drag: null as DragRef | null, delta: 0, overlaps: false};\n\n  /** Draggable items in the container. */\n  private _draggables: ReadonlyArray<DragRef>;\n\n  /** Drop lists that are connected to the current one. */\n  private _siblings: ReadonlyArray<DropListRef> = [];\n\n  /** Direction in which the list is oriented. */\n  private _orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Connected siblings that currently have a dragged item. */\n  private _activeSiblings = new Set<DropListRef>();\n\n  /** Layout direction of the drop list. */\n  private _direction: Direction = 'ltr';\n\n  /** Subscription to the window being scrolled. */\n  private _viewportScrollSubscription = Subscription.EMPTY;\n\n  /** Vertical direction in which the list is currently scrolling. */\n  private _verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n\n  /** Horizontal direction in which the list is currently scrolling. */\n  private _horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n\n  /** Node that is being auto-scrolled. */\n  private _scrollNode: HTMLElement | Window;\n\n  /** Used to signal to the current auto-scroll sequence when to stop. */\n  private _stopScrollTimers = new Subject<void>();\n\n  /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n  private _cachedShadowRoot: DocumentOrShadowRoot | null = null;\n\n  /** Reference to the document. */\n  private _document: Document;\n\n  /** Elements that can be scrolled while the user is dragging. */\n  private _scrollableElements: HTMLElement[];\n\n  /** Initial value for the element's `scroll-snap-type` style. */\n  private _initialScrollSnap: string;\n\n  constructor(\n    element: ElementRef<HTMLElement> | HTMLElement,\n    private _dragDropRegistry: DragDropRegistry<DragRef, DropListRef>,\n    _document: any,\n    private _ngZone: NgZone,\n    private _viewportRuler: ViewportRuler) {\n    this.element = coerceElement(element);\n    this._document = _document;\n    this.withScrollableParents([this.element]);\n    _dragDropRegistry.registerDropContainer(this);\n    this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n  }\n\n  /** Removes the drop list functionality from the DOM element. */\n  dispose() {\n    this._stopScrolling();\n    this._stopScrollTimers.complete();\n    this._viewportScrollSubscription.unsubscribe();\n    this.beforeStarted.complete();\n    this.entered.complete();\n    this.exited.complete();\n    this.dropped.complete();\n    this.sorted.complete();\n    this._activeSiblings.clear();\n    this._scrollNode = null!;\n    this._parentPositions.clear();\n    this._dragDropRegistry.removeDropContainer(this);\n  }\n\n  /** Whether an item from this list is currently being dragged. */\n  isDragging() {\n    return this._isDragging;\n  }\n\n  /** Starts dragging an item. */\n  start(): void {\n    const styles = coerceElement(this.element).style as DragCSSStyleDeclaration;\n    this.beforeStarted.next();\n    this._isDragging = true;\n\n    // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n    // scrolling. The browser seems to round the value based on the snapping points which means\n    // that we can't increment/decrement the scroll position.\n    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n    styles.scrollSnapType = styles.msScrollSnapType = 'none';\n    this._cacheItems();\n    this._siblings.forEach(sibling => sibling._startReceiving(this));\n    this._viewportScrollSubscription.unsubscribe();\n    this._listenToScrollEvents();\n  }\n\n  /**\n   * Emits an event to indicate that the user moved an item into the container.\n   * @param item Item that was moved into the container.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param index Index at which the item entered. If omitted, the container will try to figure it\n   *   out automatically.\n   */\n  enter(item: DragRef, pointerX: number, pointerY: number, index?: number): void {\n    this.start();\n\n    // If sorting is disabled, we want the item to return to its starting\n    // position if the user is returning it to its initial container.\n    let newIndex: number;\n\n    if (index == null) {\n      newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n\n      if (newIndex === -1) {\n        // We use the coordinates of where the item entered the drop\n        // zone to figure out at which index it should be inserted.\n        newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n      }\n    } else {\n      newIndex = index;\n    }\n\n    const activeDraggables = this._activeDraggables;\n    const currentIndex = activeDraggables.indexOf(item);\n    const placeholder = item.getPlaceholderElement();\n    let newPositionReference: DragRef | undefined = activeDraggables[newIndex];\n\n    // If the item at the new position is the same as the item that is being dragged,\n    // it means that we're trying to restore the item to its initial position. In this\n    // case we should use the next item from the list as the reference.\n    if (newPositionReference === item) {\n      newPositionReference = activeDraggables[newIndex + 1];\n    }\n\n    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n    // into another container and back again), we have to ensure that it isn't duplicated.\n    if (currentIndex > -1) {\n      activeDraggables.splice(currentIndex, 1);\n    }\n\n    // Don't use items that are being dragged as a reference, because\n    // their element has been moved down to the bottom of the body.\n    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n      const element = newPositionReference.getRootElement();\n      element.parentElement!.insertBefore(placeholder, element);\n      activeDraggables.splice(newIndex, 0, item);\n    } else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n      const reference = activeDraggables[0].getRootElement();\n      reference.parentNode!.insertBefore(placeholder, reference);\n      activeDraggables.unshift(item);\n    } else {\n      coerceElement(this.element).appendChild(placeholder);\n      activeDraggables.push(item);\n    }\n\n    // The transform needs to be cleared so it doesn't throw off the measurements.\n    placeholder.style.transform = '';\n\n    // Note that the positions were already cached when we called `start` above,\n    // but we need to refresh them since the amount of items has changed and also parent rects.\n    this._cacheItemPositions();\n    this._cacheParentPositions();\n\n    this.entered.next({item, container: this, currentIndex: this.getItemIndex(item)});\n  }\n\n  /**\n   * Removes an item from the container after it was dragged into another container by the user.\n   * @param item Item that was dragged out.\n   */\n  exit(item: DragRef): void {\n    this._reset();\n    this.exited.next({item, container: this});\n  }\n\n  /**\n   * Drops an item into this container.\n   * @param item Item being dropped into the container.\n   * @param currentIndex Index at which the item should be inserted.\n   * @param previousContainer Container from which the item got dragged in.\n   * @param isPointerOverContainer Whether the user's pointer was over the\n   *    container when the item was dropped.\n   * @param distance Distance the user has dragged since the start of the dragging sequence.\n   * @param previousIndex Index of the item when dragging started.\n   *\n   * @breaking-change 11.0.0 `previousIndex` parameter to become required.\n   */\n  drop(item: DragRef, currentIndex: number, previousContainer: DropListRef,\n    isPointerOverContainer: boolean, distance: Point, previousIndex?: number): void {\n    this._reset();\n\n    // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n    if (previousIndex == null) {\n      previousIndex = previousContainer.getItemIndex(item);\n    }\n\n    this.dropped.next({item,\n      currentIndex,\n      previousIndex,\n      container: this,\n      previousContainer,\n      isPointerOverContainer,\n      distance\n    });\n  }\n\n  /**\n   * Sets the draggable items that are a part of this list.\n   * @param items Items that are a part of this list.\n   */\n  withItems(items: DragRef[]): this {\n    const previousItems = this._draggables;\n    this._draggables = items;\n    items.forEach(item => item._withDropContainer(this));\n\n    if (this.isDragging()) {\n      const draggedItems = previousItems.filter(item => item.isDragging());\n\n      // If all of the items being dragged were removed\n      // from the list, abort the current drag sequence.\n      if (draggedItems.every(item => items.indexOf(item) === -1)) {\n        this._reset();\n      } else {\n        this._cacheItems();\n      }\n    }\n\n    return this;\n  }\n\n  /** Sets the layout direction of the drop list. */\n  withDirection(direction: Direction): this {\n    this._direction = direction;\n    return this;\n  }\n\n  /**\n   * Sets the containers that are connected to this one. When two or more containers are\n   * connected, the user will be allowed to transfer items between them.\n   * @param connectedTo Other containers that the current containers should be connected to.\n   */\n  connectedTo(connectedTo: DropListRef[]): this {\n    this._siblings = connectedTo.slice();\n    return this;\n  }\n\n  /**\n   * Sets the orientation of the container.\n   * @param orientation New orientation for the container.\n   */\n  withOrientation(orientation: 'vertical' | 'horizontal'): this {\n    this._orientation = orientation;\n    return this;\n  }\n\n  /**\n   * Sets which parent elements are can be scrolled while the user is dragging.\n   * @param elements Elements that can be scrolled.\n   */\n  withScrollableParents(elements: HTMLElement[]): this {\n    const element = coerceElement(this.element);\n\n    // We always allow the current element to be scrollable\n    // so we need to ensure that it's in the array.\n    this._scrollableElements =\n        elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n    return this;\n  }\n\n  /** Gets the scrollable parents that are registered with this drop container. */\n  getScrollableParents(): ReadonlyArray<HTMLElement> {\n    return this._scrollableElements;\n  }\n\n  /**\n   * Figures out the index of an item in the container.\n   * @param item Item whose index should be determined.\n   */\n  getItemIndex(item: DragRef): number {\n    if (!this._isDragging) {\n      return this._draggables.indexOf(item);\n    }\n\n    // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n    // The rest of the logic still stands no matter what orientation we're in, however\n    // we need to invert the array when determining the index.\n    const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n        this._itemPositions.slice().reverse() : this._itemPositions;\n\n    return findIndex(items, currentItem => currentItem.drag === item);\n  }\n\n  /**\n   * Whether the list is able to receive the item that\n   * is currently being dragged inside a connected drop list.\n   */\n  isReceiving(): boolean {\n    return this._activeSiblings.size > 0;\n  }\n\n  /**\n   * Sorts an item inside the container based on its position.\n   * @param item Item to be sorted.\n   * @param pointerX Position of the item along the X axis.\n   * @param pointerY Position of the item along the Y axis.\n   * @param pointerDelta Direction in which the pointer is moving along each axis.\n   */\n  _sortItem(item: DragRef, pointerX: number, pointerY: number,\n            pointerDelta: {x: number, y: number}): void {\n    // Don't sort the item if sorting is disabled or it's out of range.\n    if (this.sortingDisabled ||\n        !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n      return;\n    }\n\n    const siblings = this._itemPositions;\n    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n\n    if (newIndex === -1 && siblings.length > 0) {\n      return;\n    }\n\n    const isHorizontal = this._orientation === 'horizontal';\n    const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n    const siblingAtNewPosition = siblings[newIndex];\n    const currentPosition = siblings[currentIndex].clientRect;\n    const newPosition = siblingAtNewPosition.clientRect;\n    const delta = currentIndex > newIndex ? 1 : -1;\n\n    // How many pixels the item's placeholder should be offset.\n    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n\n    // How many pixels all the other items should be offset.\n    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n\n    // Save the previous order of the items before moving the item to its new index.\n    // We use this to check whether an item has been moved as a result of the sorting.\n    const oldOrder = siblings.slice();\n\n    // Shuffle the array in place.\n    moveItemInArray(siblings, currentIndex, newIndex);\n\n    this.sorted.next({\n      previousIndex: currentIndex,\n      currentIndex: newIndex,\n      container: this,\n      item\n    });\n\n    siblings.forEach((sibling, index) => {\n      // Don't do anything if the position hasn't changed.\n      if (oldOrder[index] === sibling) {\n        return;\n      }\n\n      const isDraggedItem = sibling.drag === item;\n      const offset = isDraggedItem ? itemOffset : siblingOffset;\n      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                                              sibling.drag.getRootElement();\n\n      // Update the offset to reflect the new position.\n      sibling.offset += offset;\n\n      // Since we're moving the items with a `transform`, we need to adjust their cached\n      // client rects to reflect their new position, as well as swap their positions in the cache.\n      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n      // elements may be mid-animation which will give us a wrong result.\n      if (isHorizontal) {\n        // Round the transforms since some browsers will\n        // blur the elements, for sub-pixel transforms.\n        elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n        adjustClientRect(sibling.clientRect, 0, offset);\n      } else {\n        elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n        adjustClientRect(sibling.clientRect, offset, 0);\n      }\n    });\n\n    // Note that it's important that we do this after the client rects have been adjusted.\n    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n    this._previousSwap.drag = siblingAtNewPosition.drag;\n    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n  }\n\n  /**\n   * Checks whether the user's pointer is close to the edges of either the\n   * viewport or the drop list and starts the auto-scroll sequence.\n   * @param pointerX User's pointer position along the x axis.\n   * @param pointerY User's pointer position along the y axis.\n   */\n  _startScrollingIfNecessary(pointerX: number, pointerY: number) {\n    if (this.autoScrollDisabled) {\n      return;\n    }\n\n    let scrollNode: HTMLElement | Window | undefined;\n    let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n    let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n\n    // Check whether we should start scrolling any of the parent containers.\n    this._parentPositions.positions.forEach((position, element) => {\n      // We have special handling for the `document` below. Also this would be\n      // nicer with a  for...of loop, but it requires changing a compiler flag.\n      if (element === this._document || !position.clientRect || scrollNode) {\n        return;\n      }\n\n      if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD,\n          pointerX, pointerY)) {\n        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(\n            element as HTMLElement, position.clientRect, pointerX, pointerY);\n\n        if (verticalScrollDirection || horizontalScrollDirection) {\n          scrollNode = element as HTMLElement;\n        }\n      }\n    });\n\n    // Otherwise check if we can start scrolling the viewport.\n    if (!verticalScrollDirection && !horizontalScrollDirection) {\n      const {width, height} = this._viewportRuler.getViewportSize();\n      const clientRect = {width, height, top: 0, right: width, bottom: height, left: 0};\n      verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n      horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n      scrollNode = window;\n    }\n\n    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n        horizontalScrollDirection !== this._horizontalScrollDirection ||\n        scrollNode !== this._scrollNode)) {\n      this._verticalScrollDirection = verticalScrollDirection;\n      this._horizontalScrollDirection = horizontalScrollDirection;\n      this._scrollNode = scrollNode;\n\n      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n        this._ngZone.runOutsideAngular(this._startScrollInterval);\n      } else {\n        this._stopScrolling();\n      }\n    }\n  }\n\n  /** Stops any currently-running auto-scroll sequences. */\n  _stopScrolling() {\n    this._stopScrollTimers.next();\n  }\n\n  /** Caches the positions of the configured scrollable parents. */\n  private _cacheParentPositions() {\n    const element = coerceElement(this.element);\n    this._parentPositions.cache(this._scrollableElements);\n\n    // The list element is always in the `scrollableElements`\n    // so we can take advantage of the cached `ClientRect`.\n    this._clientRect = this._parentPositions.positions.get(element)!.clientRect!;\n  }\n\n  /** Refreshes the position cache of the items and sibling containers. */\n  private _cacheItemPositions() {\n    const isHorizontal = this._orientation === 'horizontal';\n\n    this._itemPositions = this._activeDraggables.map(drag => {\n      const elementToMeasure = drag.getVisibleElement();\n      return {drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure)};\n    }).sort((a, b) => {\n      return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                            a.clientRect.top - b.clientRect.top;\n    });\n  }\n\n  /** Resets the container to its initial state. */\n  private _reset() {\n    this._isDragging = false;\n\n    const styles = coerceElement(this.element).style as DragCSSStyleDeclaration;\n    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n\n    // TODO(crisbeto): may have to wait for the animations to finish.\n    this._activeDraggables.forEach(item => {\n      const rootElement = item.getRootElement();\n\n      if (rootElement) {\n        rootElement.style.transform = '';\n      }\n    });\n    this._siblings.forEach(sibling => sibling._stopReceiving(this));\n    this._activeDraggables = [];\n    this._itemPositions = [];\n    this._previousSwap.drag = null;\n    this._previousSwap.delta = 0;\n    this._previousSwap.overlaps = false;\n    this._stopScrolling();\n    this._viewportScrollSubscription.unsubscribe();\n    this._parentPositions.clear();\n  }\n\n  /**\n   * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n   * @param currentIndex Index of the item currently being dragged.\n   * @param siblings All of the items in the list.\n   * @param delta Direction in which the user is moving.\n   */\n  private _getSiblingOffsetPx(currentIndex: number,\n                              siblings: CachedItemPosition[],\n                              delta: 1 | -1) {\n\n    const isHorizontal = this._orientation === 'horizontal';\n    const currentPosition = siblings[currentIndex].clientRect;\n    const immediateSibling = siblings[currentIndex + delta * -1];\n    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n\n    if (immediateSibling) {\n      const start = isHorizontal ? 'left' : 'top';\n      const end = isHorizontal ? 'right' : 'bottom';\n\n      // Get the spacing between the start of the current item and the end of the one immediately\n      // after it in the direction in which the user is dragging, or vice versa. We add it to the\n      // offset in order to push the element to where it will be when it's inline and is influenced\n      // by the `margin` of its siblings.\n      if (delta === -1) {\n        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n      } else {\n        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n      }\n    }\n\n    return siblingOffset;\n  }\n\n  /**\n   * Gets the offset in pixels by which the item that is being dragged should be moved.\n   * @param currentPosition Current position of the item.\n   * @param newPosition Position of the item where the current item should be moved.\n   * @param delta Direction in which the user is moving.\n   */\n  private _getItemOffsetPx(currentPosition: ClientRect, newPosition: ClientRect, delta: 1 | -1) {\n    const isHorizontal = this._orientation === 'horizontal';\n    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n                                    newPosition.top - currentPosition.top;\n\n    // Account for differences in the item width/height.\n    if (delta === -1) {\n      itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                                   newPosition.height - currentPosition.height;\n    }\n\n    return itemOffset;\n  }\n\n  /**\n   * Checks if pointer is entering in the first position\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   */\n  private _shouldEnterAsFirstChild(pointerX: number, pointerY: number) {\n    if (!this._activeDraggables.length) {\n      return false;\n    }\n\n    const itemPositions = this._itemPositions;\n    const isHorizontal = this._orientation === 'horizontal';\n\n    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n    // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n    const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n    if (reversed) {\n      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n    } else {\n      const firstItemRect = itemPositions[0].clientRect;\n      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n    }\n  }\n\n  /**\n   * Gets the index of an item in the drop container, based on the position of the user's pointer.\n   * @param item Item that is being sorted.\n   * @param pointerX Position of the user's pointer along the X axis.\n   * @param pointerY Position of the user's pointer along the Y axis.\n   * @param delta Direction in which the user is moving their pointer.\n   */\n  private _getItemIndexFromPointerPosition(item: DragRef, pointerX: number, pointerY: number,\n                                           delta?: {x: number, y: number}) {\n    const isHorizontal = this._orientation === 'horizontal';\n\n    return findIndex(this._itemPositions, ({drag, clientRect}, _, array) => {\n      if (drag === item) {\n        // If there's only one item left in the container, it must be\n        // the dragged item itself so we use it as a reference.\n        return array.length < 2;\n      }\n\n      if (delta) {\n        const direction = isHorizontal ? delta.x : delta.y;\n\n        // If the user is still hovering over the same item as last time, their cursor hasn't left\n        // the item after we made the swap, and they didn't change the direction in which they're\n        // dragging, we don't consider it a direction swap.\n        if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n            direction === this._previousSwap.delta) {\n          return false;\n        }\n      }\n\n      return isHorizontal ?\n          // Round these down since most browsers report client rects with\n          // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n          pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n          pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n    });\n  }\n\n  /** Caches the current items in the list and their positions. */\n  private _cacheItems(): void {\n    this._activeDraggables = this._draggables.slice();\n    this._cacheItemPositions();\n    this._cacheParentPositions();\n  }\n\n  /** Starts the interval that'll auto-scroll the element. */\n  private _startScrollInterval = () => {\n    this._stopScrolling();\n\n    interval(0, animationFrameScheduler)\n      .pipe(takeUntil(this._stopScrollTimers))\n      .subscribe(() => {\n        const node = this._scrollNode;\n\n        if (this._verticalScrollDirection === AutoScrollVerticalDirection.UP) {\n          incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n        } else if (this._verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\n          incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n        }\n\n        if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\n          incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n        } else if (this._horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\n          incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n        }\n      });\n  }\n\n  /**\n   * Checks whether the user's pointer is positioned over the container.\n   * @param x Pointer position along the X axis.\n   * @param y Pointer position along the Y axis.\n   */\n  _isOverContainer(x: number, y: number): boolean {\n    return isInsideClientRect(this._clientRect, x, y);\n  }\n\n  /**\n   * Figures out whether an item should be moved into a sibling\n   * drop container, based on its current position.\n   * @param item Drag item that is being moved.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _getSiblingContainerFromPosition(item: DragRef, x: number, y: number): DropListRef | undefined {\n    return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n  }\n\n  /**\n   * Checks whether the drop list can receive the passed-in item.\n   * @param item Item that is being dragged into the list.\n   * @param x Position of the item along the X axis.\n   * @param y Position of the item along the Y axis.\n   */\n  _canReceive(item: DragRef, x: number, y: number): boolean {\n    if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n      return false;\n    }\n\n    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y) as HTMLElement | null;\n\n    // If there's no element at the pointer position, then\n    // the client rect is probably scrolled out of the view.\n    if (!elementFromPoint) {\n      return false;\n    }\n\n    const nativeElement = coerceElement(this.element);\n\n    // The `ClientRect`, that we're using to find the container over which the user is\n    // hovering, doesn't give us any information on whether the element has been scrolled\n    // out of the view or whether it's overlapping with other containers. This means that\n    // we could end up transferring the item into a container that's invisible or is positioned\n    // below another one. We use the result from `elementFromPoint` to get the top-most element\n    // at the pointer position and to find whether it's one of the intersecting drop containers.\n    return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n  }\n\n  /**\n   * Called by one of the connected drop lists when a dragging sequence has started.\n   * @param sibling Sibling in which dragging has started.\n   */\n  _startReceiving(sibling: DropListRef) {\n    const activeSiblings = this._activeSiblings;\n\n    if (!activeSiblings.has(sibling)) {\n      activeSiblings.add(sibling);\n      this._cacheParentPositions();\n      this._listenToScrollEvents();\n    }\n  }\n\n  /**\n   * Called by a connected drop list when dragging has stopped.\n   * @param sibling Sibling whose dragging has stopped.\n   */\n  _stopReceiving(sibling: DropListRef) {\n    this._activeSiblings.delete(sibling);\n    this._viewportScrollSubscription.unsubscribe();\n  }\n\n  /**\n   * Starts listening to scroll events on the viewport.\n   * Used for updating the internal state of the list.\n   */\n  private _listenToScrollEvents() {\n    this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n      if (this.isDragging()) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n\n        if (scrollDifference) {\n          // Since we know the amount that the user has scrolled we can shift all of the\n          // client rectangles ourselves. This is cheaper than re-measuring everything and\n          // we can avoid inconsistent behavior where we might be measuring the element before\n          // its position has changed.\n          this._itemPositions.forEach(({clientRect}) => {\n            adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n          });\n\n          // We need two loops for this, because we want all of the cached\n          // positions to be up-to-date before we re-sort the item.\n          this._itemPositions.forEach(({drag}) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n              // We need to re-sort the item manually, because the pointer move\n              // events won't be dispatched while the user is scrolling.\n              drag._sortFromLastPointerPosition();\n            }\n          });\n        }\n      } else if (this.isReceiving()) {\n        this._cacheParentPositions();\n      }\n    });\n  }\n\n  /**\n   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n   * than saving it in property directly on init, because we want to resolve it as late as possible\n   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n   */\n  private _getShadowRoot(): DocumentOrShadowRoot {\n    if (!this._cachedShadowRoot) {\n      const shadowRoot = _getShadowRoot(coerceElement(this.element)) as ShadowRoot | null;\n      this._cachedShadowRoot = shadowRoot || this._document;\n    }\n\n    return this._cachedShadowRoot;\n  }\n}\n\n\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex<T>(array: T[],\n                      predicate: (value: T, index: number, obj: T[]) => boolean): number {\n\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node: HTMLElement | Window, amount: number) {\n  if (node === window) {\n    (node as Window).scrollBy(0, amount);\n  } else {\n    // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n    (node as HTMLElement).scrollTop += amount;\n  }\n}\n\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node: HTMLElement | Window, amount: number) {\n  if (node === window) {\n    (node as Window).scrollBy(amount, 0);\n  } else {\n    // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n    (node as HTMLElement).scrollLeft += amount;\n  }\n}\n\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect: ClientRect, pointerY: number) {\n  const {top, bottom, height} = clientRect;\n  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n\n  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n    return AutoScrollVerticalDirection.UP;\n  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n    return AutoScrollVerticalDirection.DOWN;\n  }\n\n  return AutoScrollVerticalDirection.NONE;\n}\n\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect: ClientRect, pointerX: number) {\n  const {left, right, width} = clientRect;\n  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n\n  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n    return AutoScrollHorizontalDirection.LEFT;\n  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n    return AutoScrollHorizontalDirection.RIGHT;\n  }\n\n  return AutoScrollHorizontalDirection.NONE;\n}\n\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element: HTMLElement, clientRect: ClientRect, pointerX: number,\n  pointerY: number): [AutoScrollVerticalDirection, AutoScrollHorizontalDirection] {\n  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n  let verticalScrollDirection = AutoScrollVerticalDirection.NONE;\n  let horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\n\n  // Note that we here we do some extra checks for whether the element is actually scrollable in\n  // a certain direction and we only assign the scroll direction if it is. We do this so that we\n  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n  if (computedVertical) {\n    const scrollTop = element.scrollTop;\n\n    if (computedVertical === AutoScrollVerticalDirection.UP) {\n      if (scrollTop > 0) {\n        verticalScrollDirection = AutoScrollVerticalDirection.UP;\n      }\n    } else if (element.scrollHeight - scrollTop > element.clientHeight) {\n      verticalScrollDirection = AutoScrollVerticalDirection.DOWN;\n    }\n  }\n\n  if (computedHorizontal) {\n    const scrollLeft = element.scrollLeft;\n\n    if (computedHorizontal === AutoScrollHorizontalDirection.LEFT) {\n      if (scrollLeft > 0) {\n        horizontalScrollDirection = AutoScrollHorizontalDirection.LEFT;\n      }\n    } else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n      horizontalScrollDirection = AutoScrollHorizontalDirection.RIGHT;\n    }\n  }\n\n  return [verticalScrollDirection, horizontalScrollDirection];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone, OnDestroy, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {Subject} from 'rxjs';\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n  passive: false,\n  capture: true\n});\n\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\n@Injectable({providedIn: 'root'})\nexport class DragDropRegistry<I, C> implements OnDestroy {\n  private _document: Document;\n\n  /** Registered drop container instances. */\n  private _dropInstances = new Set<C>();\n\n  /** Registered drag item instances. */\n  private _dragInstances = new Set<I>();\n\n  /** Drag item instances that are currently being dragged. */\n  private _activeDragInstances = new Set<I>();\n\n  /** Keeps track of the event listeners that we've bound to the `document`. */\n  private _globalListeners = new Map<string, {\n    handler: (event: Event) => void,\n    options?: AddEventListenerOptions | boolean\n  }>();\n\n  /**\n   * Emits the `touchmove` or `mousemove` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  readonly pointerMove: Subject<TouchEvent | MouseEvent> = new Subject<TouchEvent | MouseEvent>();\n\n  /**\n   * Emits the `touchend` or `mouseup` events that are dispatched\n   * while the user is dragging a drag item instance.\n   */\n  readonly pointerUp: Subject<TouchEvent | MouseEvent> = new Subject<TouchEvent | MouseEvent>();\n\n  /** Emits when the viewport has been scrolled while the user is dragging an item. */\n  readonly scroll: Subject<Event> = new Subject<Event>();\n\n  constructor(\n    private _ngZone: NgZone,\n    @Inject(DOCUMENT) _document: any) {\n    this._document = _document;\n  }\n\n  /** Adds a drop container to the registry. */\n  registerDropContainer(drop: C) {\n    if (!this._dropInstances.has(drop)) {\n      this._dropInstances.add(drop);\n    }\n  }\n\n  /** Adds a drag item instance to the registry. */\n  registerDragItem(drag: I) {\n    this._dragInstances.add(drag);\n\n    // The `touchmove` event gets bound once, ahead of time, because WebKit\n    // won't preventDefault on a dynamically-added `touchmove` listener.\n    // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n    if (this._dragInstances.size === 1) {\n      this._ngZone.runOutsideAngular(() => {\n        // The event handler has to be explicitly active,\n        // because newer browsers make it passive by default.\n        this._document.addEventListener('touchmove', this._persistentTouchmoveListener,\n            activeCapturingEventOptions);\n      });\n    }\n  }\n\n  /** Removes a drop container from the registry. */\n  removeDropContainer(drop: C) {\n    this._dropInstances.delete(drop);\n  }\n\n  /** Removes a drag item instance from the registry. */\n  removeDragItem(drag: I) {\n    this._dragInstances.delete(drag);\n    this.stopDragging(drag);\n\n    if (this._dragInstances.size === 0) {\n      this._document.removeEventListener('touchmove', this._persistentTouchmoveListener,\n          activeCapturingEventOptions);\n    }\n  }\n\n  /**\n   * Starts the dragging sequence for a drag instance.\n   * @param drag Drag instance which is being dragged.\n   * @param event Event that initiated the dragging.\n   */\n  startDragging(drag: I, event: TouchEvent | MouseEvent) {\n    // Do not process the same drag twice to avoid memory leaks and redundant listeners\n    if (this._activeDragInstances.has(drag)) {\n      return;\n    }\n\n    this._activeDragInstances.add(drag);\n\n    if (this._activeDragInstances.size === 1) {\n      const isTouchEvent = event.type.startsWith('touch');\n\n      // We explicitly bind __active__ listeners here, because newer browsers will default to\n      // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n      // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n      this._globalListeners\n        .set(isTouchEvent ? 'touchend' : 'mouseup', {\n          handler: (e: Event) => this.pointerUp.next(e as TouchEvent | MouseEvent),\n          options: true\n        })\n        .set('scroll', {\n          handler: (e: Event) => this.scroll.next(e),\n          // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n          // the document. See https://github.com/angular/components/issues/17144.\n          options: true\n        })\n        // Preventing the default action on `mousemove` isn't enough to disable text selection\n        // on Safari so we need to prevent the selection event as well. Alternatively this can\n        // be done by setting `user-select: none` on the `body`, however it has causes a style\n        // recalculation which can be expensive on pages with a lot of elements.\n        .set('selectstart', {\n          handler: this._preventDefaultWhileDragging,\n          options: activeCapturingEventOptions\n        });\n\n      // We don't have to bind a move event for touch drag sequences, because\n      // we already have a persistent global one bound from `registerDragItem`.\n      if (!isTouchEvent) {\n        this._globalListeners.set('mousemove', {\n          handler: (e: Event) => this.pointerMove.next(e as MouseEvent),\n          options: activeCapturingEventOptions\n        });\n      }\n\n      this._ngZone.runOutsideAngular(() => {\n        this._globalListeners.forEach((config, name) => {\n          this._document.addEventListener(name, config.handler, config.options);\n        });\n      });\n    }\n  }\n\n  /** Stops dragging a drag item instance. */\n  stopDragging(drag: I) {\n    this._activeDragInstances.delete(drag);\n\n    if (this._activeDragInstances.size === 0) {\n      this._clearGlobalListeners();\n    }\n  }\n\n  /** Gets whether a drag item instance is currently being dragged. */\n  isDragging(drag: I) {\n    return this._activeDragInstances.has(drag);\n  }\n\n  ngOnDestroy() {\n    this._dragInstances.forEach(instance => this.removeDragItem(instance));\n    this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n    this._clearGlobalListeners();\n    this.pointerMove.complete();\n    this.pointerUp.complete();\n  }\n\n  /**\n   * Event listener that will prevent the default browser action while the user is dragging.\n   * @param event Event whose default action should be prevented.\n   */\n  private _preventDefaultWhileDragging = (event: Event) => {\n    if (this._activeDragInstances.size) {\n      event.preventDefault();\n    }\n  }\n\n  /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n  private _persistentTouchmoveListener = (event: TouchEvent) => {\n    if (this._activeDragInstances.size) {\n      event.preventDefault();\n      this.pointerMove.next(event);\n    }\n  }\n\n  /** Clears out the global event listeners from the `document`. */\n  private _clearGlobalListeners() {\n    this._globalListeners.forEach((config, name) => {\n      this._document.removeEventListener(name, config.handler, config.options);\n    });\n\n    this._globalListeners.clear();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Inject, NgZone, ElementRef} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {DragRef, DragRefConfig} from './drag-ref';\nimport {DropListRef} from './drop-list-ref';\nimport {DragDropRegistry} from './drag-drop-registry';\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n  dragStartThreshold: 5,\n  pointerDirectionChangeThreshold: 5\n};\n\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\n@Injectable({providedIn: 'root'})\nexport class DragDrop {\n  constructor(\n    @Inject(DOCUMENT) private _document: any,\n    private _ngZone: NgZone,\n    private _viewportRuler: ViewportRuler,\n    private _dragDropRegistry: DragDropRegistry<DragRef, DropListRef>) {}\n\n  /**\n   * Turns an element into a draggable item.\n   * @param element Element to which to attach the dragging functionality.\n   * @param config Object used to configure the dragging behavior.\n   */\n  createDrag<T = any>(element: ElementRef<HTMLElement> | HTMLElement,\n                config: DragRefConfig = DEFAULT_CONFIG): DragRef<T> {\n\n    return new DragRef<T>(element, config, this._document, this._ngZone, this._viewportRuler,\n        this._dragDropRegistry);\n  }\n\n  /**\n   * Turns an element into a drop list.\n   * @param element Element to which to attach the drop list functionality.\n   */\n  createDropList<T = any>(element: ElementRef<HTMLElement> | HTMLElement): DropListRef<T> {\n    return new DropListRef<T>(element, this._dragDropRegistry, this._document, this._ngZone,\n        this._viewportRuler);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nexport const CDK_DRAG_PARENT = new InjectionToken<{}>('CDK_DRAG_PARENT');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkDrag} from './directives/drag';\nimport {CdkDropList} from './directives/drop-list';\n\n/** Event emitted when the user starts dragging a draggable. */\nexport interface CdkDragStart<T = any> {\n  /** Draggable that emitted the event. */\n  source: CdkDrag<T>;\n}\n\n/** Event emitted when the user releases an item, before any animations have started. */\nexport interface CdkDragRelease<T = any> {\n  /** Draggable that emitted the event. */\n  source: CdkDrag<T>;\n}\n\n/** Event emitted when the user stops dragging a draggable. */\nexport interface CdkDragEnd<T = any> {\n  /** Draggable that emitted the event. */\n  source: CdkDrag<T>;\n  /** Distance in pixels that the user has dragged since the drag sequence started. */\n  distance: {x: number, y: number};\n}\n\n/** Event emitted when the user moves an item into a new drop container. */\nexport interface CdkDragEnter<T = any, I = T> {\n  /** Container into which the user has moved the item. */\n  container: CdkDropList<T>;\n  /** Item that was moved into the container. */\n  item: CdkDrag<I>;\n  /** Index at which the item has entered the container. */\n  currentIndex: number;\n}\n\n/**\n * Event emitted when the user removes an item from a\n * drop container by moving it into another one.\n */\nexport interface CdkDragExit<T = any, I = T> {\n  /** Container from which the user has a removed an item. */\n  container: CdkDropList<T>;\n  /** Item that was removed from the container. */\n  item: CdkDrag<I>;\n}\n\n\n/** Event emitted when the user drops a draggable item inside a drop container. */\nexport interface CdkDragDrop<T, O = T> {\n  /** Index of the item when it was picked up. */\n  previousIndex: number;\n  /** Current index of the item. */\n  currentIndex: number;\n  /** Item that is being dropped. */\n  item: CdkDrag;\n  /** Container in which the item was dropped. */\n  container: CdkDropList<T>;\n  /** Container from which the item was picked up. Can be the same as the `container`. */\n  previousContainer: CdkDropList<O>;\n  /** Whether the user's pointer was over the container when the item was dropped. */\n  isPointerOverContainer: boolean;\n  /** Distance in pixels that the user has dragged since the drag sequence started. */\n  distance: {x: number, y: number};\n}\n\n/** Event emitted as the user is dragging a draggable item. */\nexport interface CdkDragMove<T = any> {\n  /** Item that is being dragged. */\n  source: CdkDrag<T>;\n  /** Position of the user's pointer on the page. */\n  pointerPosition: {x: number, y: number};\n  /** Native event that is causing the dragging. */\n  event: MouseEvent | TouchEvent;\n  /** Distance in pixels that the user has dragged since the drag sequence started. */\n  distance: {x: number, y: number};\n  /**\n   * Indicates the direction in which the user is dragging the element along each axis.\n   * `1` means that the position is increasing (e.g. the user is moving to the right or downwards),\n   * whereas `-1` means that it's decreasing (they're moving to the left or upwards). `0` means\n   * that the position hasn't changed.\n   */\n  delta: {x: -1 | 0 | 1, y: -1 | 0 | 1};\n}\n\n/** Event emitted when the user swaps the position of two drag items. */\nexport interface CdkDragSortEvent<T = any, I = T> {\n  /** Index from which the item was sorted previously. */\n  previousIndex: number;\n  /** Index that the item is currently in. */\n  currentIndex: number;\n  /** Container that the item belongs to. */\n  container: CdkDropList<T>;\n  /** Item that is being sorted. */\n  item: CdkDrag<I>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, OnDestroy, Input, InjectionToken} from '@angular/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const CDK_DROP_LIST_GROUP =\n    new InjectionToken<CdkDropListGroup<unknown>>('CdkDropListGroup');\n\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\n@Directive({\n  selector: '[cdkDropListGroup]',\n  exportAs: 'cdkDropListGroup',\n  providers: [{provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup}],\n})\nexport class CdkDropListGroup<T> implements OnDestroy {\n  /** Drop lists registered inside the group. */\n  readonly _items = new Set<T>();\n\n  /** Whether starting a dragging sequence from inside this group is disabled. */\n  @Input('cdkDropListGroupDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  ngOnDestroy() {\n    this._items.clear();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {DragRefConfig, Point, DragRef} from '../drag-ref';\n\n/** Possible values that can be used to configure the drag start delay. */\nexport type DragStartDelay = number | {touch: number, mouse: number};\n\n/** Possible axis along which dragging can be locked. */\nexport type DragAxis = 'x' | 'y';\n\n/** Function that can be used to constrain the position of a dragged element. */\nexport type DragConstrainPosition = (point: Point, dragRef: DragRef) => Point;\n\n/** Possible orientations for a drop list. */\nexport type DropListOrientation = 'horizontal' | 'vertical';\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nexport const CDK_DRAG_CONFIG = new InjectionToken<DragDropConfig>('CDK_DRAG_CONFIG');\n\n/**\n * Object that can be used to configure the drag\n * items and drop lists within a module or a component.\n */\nexport interface DragDropConfig extends Partial<DragRefConfig> {\n  lockAxis?: DragAxis;\n  dragStartDelay?: DragStartDelay;\n  constrainPosition?: DragConstrainPosition;\n  previewClass?: string | string[];\n  boundaryElement?: string;\n  rootElementSelector?: string;\n  draggingDisabled?: boolean;\n  sortingDisabled?: boolean;\n  listAutoScrollDisabled?: boolean;\n  listOrientation?: DropListOrientation;\n  zIndex?: number;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceArray, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  Optional,\n  Directive,\n  ChangeDetectorRef,\n  SkipSelf,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {CdkDrag} from './drag';\nimport {CdkDragDrop, CdkDragEnter, CdkDragExit, CdkDragSortEvent} from '../drag-events';\nimport {CDK_DROP_LIST_GROUP, CdkDropListGroup} from './drop-list-group';\nimport {DropListRef} from '../drop-list-ref';\nimport {DragRef} from '../drag-ref';\nimport {DragDrop} from '../drag-drop';\nimport {DropListOrientation, DragAxis, DragDropConfig, CDK_DRAG_CONFIG} from './config';\nimport {Subject} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n\n/**\n * Internal compile-time-only representation of a `CdkDropList`.\n * Used to avoid circular import issues between the `CdkDropList` and the `CdkDrag`.\n * @docs-private\n */\nexport interface CdkDropListInternal extends CdkDropList {}\n\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const CDK_DROP_LIST = new InjectionToken<CdkDropList>('CdkDropList');\n\n/** Container that wraps a set of draggable items. */\n@Directive({\n  selector: '[cdkDropList], cdk-drop-list',\n  exportAs: 'cdkDropList',\n  providers: [\n    // Prevent child drop lists from picking up the same group as their parent.\n    {provide: CDK_DROP_LIST_GROUP, useValue: undefined},\n    {provide: CDK_DROP_LIST, useExisting: CdkDropList},\n  ],\n  host: {\n    'class': 'cdk-drop-list',\n    '[id]': 'id',\n    '[class.cdk-drop-list-disabled]': 'disabled',\n    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n  }\n})\nexport class CdkDropList<T = any> implements OnDestroy {\n  /** Emits when the list has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** Whether the element's scrollable parents have been resolved. */\n  private _scrollableParentsResolved: boolean;\n\n  /** Keeps track of the drop lists that are currently on the page. */\n  private static _dropLists: CdkDropList[] = [];\n\n  /** Reference to the underlying drop list instance. */\n  _dropListRef: DropListRef<CdkDropList<T>>;\n\n  /**\n   * Other draggable containers that this container is connected to and into which the\n   * container's items can be transferred. Can either be references to other drop containers,\n   * or their unique IDs.\n   */\n  @Input('cdkDropListConnectedTo')\n  connectedTo: (CdkDropList | string)[] | CdkDropList | string = [];\n\n  /** Arbitrary data to attach to this container. */\n  @Input('cdkDropListData') data: T;\n\n  /** Direction in which the list is oriented. */\n  @Input('cdkDropListOrientation') orientation: DropListOrientation;\n\n  /**\n   * Unique ID for the drop zone. Can be used as a reference\n   * in the `connectedTo` of another `CdkDropList`.\n   */\n  @Input() id: string = `cdk-drop-list-${_uniqueIdCounter++}`;\n\n  /** Locks the position of the draggable elements inside the container along the specified axis. */\n  @Input('cdkDropListLockAxis') lockAxis: DragAxis;\n\n  /** Whether starting a dragging sequence from this container is disabled. */\n  @Input('cdkDropListDisabled')\n  get disabled(): boolean {\n    return this._disabled || (!!this._group && this._group.disabled);\n  }\n  set disabled(value: boolean) {\n    // Usually we sync the directive and ref state right before dragging starts, in order to have\n    // a single point of failure and to avoid having to use setters for everything. `disabled` is\n    // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n    // the user in a disabled state, so we also need to sync it as it's being set.\n    this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether sorting within this drop list is disabled. */\n  @Input('cdkDropListSortingDisabled')\n  sortingDisabled: boolean;\n\n  /**\n   * Function that is used to determine whether an item\n   * is allowed to be moved into a drop container.\n   */\n  @Input('cdkDropListEnterPredicate')\n  enterPredicate: (drag: CdkDrag, drop: CdkDropList) => boolean = () => true\n\n  /** Whether to auto-scroll the view when the user moves their pointer close to the edges. */\n  @Input('cdkDropListAutoScrollDisabled')\n  autoScrollDisabled: boolean;\n\n  /** Emits when the user drops an item inside the container. */\n  @Output('cdkDropListDropped')\n  dropped: EventEmitter<CdkDragDrop<T, any>> = new EventEmitter<CdkDragDrop<T, any>>();\n\n  /**\n   * Emits when the user has moved a new drag item into this container.\n   */\n  @Output('cdkDropListEntered')\n  entered: EventEmitter<CdkDragEnter<T>> = new EventEmitter<CdkDragEnter<T>>();\n\n  /**\n   * Emits when the user removes an item from the container\n   * by dragging it into another container.\n   */\n  @Output('cdkDropListExited')\n  exited: EventEmitter<CdkDragExit<T>> = new EventEmitter<CdkDragExit<T>>();\n\n  /** Emits as the user is swapping items while actively dragging. */\n  @Output('cdkDropListSorted')\n  sorted: EventEmitter<CdkDragSortEvent<T>> = new EventEmitter<CdkDragSortEvent<T>>();\n\n  /**\n   * Keeps track of the items that are registered with this container. Historically we used to\n   * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n   * well which means that we can't handle cases like dragging the headers of a `mat-table`\n   * correctly. What we do instead is to have the items register themselves with the container\n   * and then we sort them based on their position in the DOM.\n   */\n  private _unsortedItems = new Set<CdkDrag>();\n\n  constructor(\n      /** Element that the drop list is attached to. */\n      public element: ElementRef<HTMLElement>, dragDrop: DragDrop,\n      private _changeDetectorRef: ChangeDetectorRef, @Optional() private _dir?: Directionality,\n      @Optional() @Inject(CDK_DROP_LIST_GROUP) @SkipSelf()\n      private _group?: CdkDropListGroup<CdkDropList>,\n\n      /**\n       * @deprecated _scrollDispatcher parameter to become required.\n       * @breaking-change 11.0.0\n       */\n      private _scrollDispatcher?: ScrollDispatcher,\n      @Optional() @Inject(CDK_DRAG_CONFIG) config?: DragDropConfig) {\n    this._dropListRef = dragDrop.createDropList(element);\n    this._dropListRef.data = this;\n\n    if (config) {\n      this._assignDefaults(config);\n    }\n\n    this._dropListRef.enterPredicate = (drag: DragRef<CdkDrag>, drop: DropListRef<CdkDropList>) => {\n      return this.enterPredicate(drag.data, drop.data);\n    };\n\n    this._setupInputSyncSubscription(this._dropListRef);\n    this._handleEvents(this._dropListRef);\n    CdkDropList._dropLists.push(this);\n\n    if (_group) {\n      _group._items.add(this);\n    }\n  }\n\n  /** Registers an items with the drop list. */\n  addItem(item: CdkDrag): void {\n    this._unsortedItems.add(item);\n\n    if (this._dropListRef.isDragging()) {\n      this._syncItemsWithRef();\n    }\n  }\n\n  /** Removes an item from the drop list. */\n  removeItem(item: CdkDrag): void {\n    this._unsortedItems.delete(item);\n\n    if (this._dropListRef.isDragging()) {\n      this._syncItemsWithRef();\n    }\n  }\n\n  /** Gets the registered items in the list, sorted by their position in the DOM. */\n  getSortedItems(): CdkDrag[] {\n    return Array.from(this._unsortedItems).sort((a: CdkDrag, b: CdkDrag) => {\n      const documentPosition =\n          a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n\n      // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n      // tslint:disable-next-line:no-bitwise\n      return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n    });\n  }\n\n  ngOnDestroy() {\n    const index = CdkDropList._dropLists.indexOf(this);\n\n    if (index > -1) {\n      CdkDropList._dropLists.splice(index, 1);\n    }\n\n    if (this._group) {\n      this._group._items.delete(this);\n    }\n\n    this._unsortedItems.clear();\n    this._dropListRef.dispose();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n  private _setupInputSyncSubscription(ref: DropListRef<CdkDropList>) {\n    if (this._dir) {\n      this._dir.change\n        .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n        .subscribe(value => ref.withDirection(value));\n    }\n\n    ref.beforeStarted.subscribe(() => {\n      const siblings = coerceArray(this.connectedTo).map(drop => {\n        if (typeof drop === 'string') {\n          const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n\n          if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n          }\n\n          return correspondingDropList!;\n        }\n\n        return drop;\n      });\n\n      if (this._group) {\n        this._group._items.forEach(drop => {\n          if (siblings.indexOf(drop) === -1) {\n            siblings.push(drop);\n          }\n        });\n      }\n\n      // Note that we resolve the scrollable parents here so that we delay the resolution\n      // as long as possible, ensuring that the element is in its final place in the DOM.\n      // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n      if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n        const scrollableParents = this._scrollDispatcher\n          .getAncestorScrollContainers(this.element)\n          .map(scrollable => scrollable.getElementRef().nativeElement);\n        this._dropListRef.withScrollableParents(scrollableParents);\n\n        // Only do this once since it involves traversing the DOM and the parents\n        // shouldn't be able to change without the drop list being destroyed.\n        this._scrollableParentsResolved = true;\n      }\n\n      ref.disabled = this.disabled;\n      ref.lockAxis = this.lockAxis;\n      ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n      ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n      ref\n        .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n        .withOrientation(this.orientation);\n    });\n  }\n\n  /** Handles events from the underlying DropListRef. */\n  private _handleEvents(ref: DropListRef<CdkDropList>) {\n    ref.beforeStarted.subscribe(() => {\n      this._syncItemsWithRef();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    ref.entered.subscribe(event => {\n      this.entered.emit({\n        container: this,\n        item: event.item.data,\n        currentIndex: event.currentIndex\n      });\n    });\n\n    ref.exited.subscribe(event => {\n      this.exited.emit({\n        container: this,\n        item: event.item.data\n      });\n      this._changeDetectorRef.markForCheck();\n    });\n\n    ref.sorted.subscribe(event => {\n      this.sorted.emit({\n        previousIndex: event.previousIndex,\n        currentIndex: event.currentIndex,\n        container: this,\n        item: event.item.data\n      });\n    });\n\n    ref.dropped.subscribe(event => {\n      this.dropped.emit({\n        previousIndex: event.previousIndex,\n        currentIndex: event.currentIndex,\n        previousContainer: event.previousContainer.data,\n        container: event.container.data,\n        item: event.item.data,\n        isPointerOverContainer: event.isPointerOverContainer,\n        distance: event.distance\n      });\n\n      // Mark for check since all of these events run outside of change\n      // detection and we're not guaranteed for something else to have triggered it.\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** Assigns the default input values based on a provided config object. */\n  private _assignDefaults(config: DragDropConfig) {\n    const {\n      lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation\n    } = config;\n\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n    this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n    this.orientation = listOrientation || 'vertical';\n\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n  }\n\n  /** Syncs up the registered drag items with underlying drop list ref. */\n  private _syncItemsWithRef() {\n    this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_sortingDisabled: BooleanInput;\n  static ngAcceptInputType_autoScrollDisabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {CDK_DRAG_PARENT} from '../drag-parent';\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const CDK_DRAG_HANDLE = new InjectionToken<CdkDragHandle>('CdkDragHandle');\n\n/** Handle that can be used to drag a CdkDrag instance. */\n@Directive({\n  selector: '[cdkDragHandle]',\n  host: {\n    'class': 'cdk-drag-handle'\n  },\n  providers: [{provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle}],\n})\nexport class CdkDragHandle implements OnDestroy {\n  /** Closest parent draggable instance. */\n  _parentDrag: {} | undefined;\n\n  /** Emits when the state of the handle has changed. */\n  _stateChanges = new Subject<CdkDragHandle>();\n\n  /** Whether starting to drag through this handle is disabled. */\n  @Input('cdkDragHandleDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._stateChanges.next(this);\n  }\n  private _disabled = false;\n\n  constructor(\n    public element: ElementRef<HTMLElement>,\n    @Inject(CDK_DRAG_PARENT) @Optional() @SkipSelf() parentDrag?: any) {\n    this._parentDrag = parentDrag;\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef, Input, InjectionToken} from '@angular/core';\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const CDK_DRAG_PLACEHOLDER = new InjectionToken<CdkDragPlaceholder>('CdkDragPlaceholder');\n\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\n@Directive({\n  selector: 'ng-template[cdkDragPlaceholder]',\n  providers: [{provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder}],\n})\nexport class CdkDragPlaceholder<T = any> {\n  /** Context data to be added to the placeholder template instance. */\n  @Input() data: T;\n  constructor(public templateRef: TemplateRef<T>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, InjectionToken, Input, TemplateRef} from '@angular/core';\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const CDK_DRAG_PREVIEW = new InjectionToken<CdkDragPreview>('CdkDragPreview');\n\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\n@Directive({\n  selector: 'ng-template[cdkDragPreview]',\n  providers: [{provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview}],\n})\nexport class CdkDragPreview<T = any> {\n  /** Context data to be added to the preview template instance. */\n  @Input() data: T;\n\n  /** Whether the preview should preserve the same size as the item that is being dragged. */\n  @Input()\n  get matchSize(): boolean { return this._matchSize; }\n  set matchSize(value: boolean) { this._matchSize = coerceBooleanProperty(value); }\n  private _matchSize = false;\n\n  constructor(public templateRef: TemplateRef<T>) {}\n\n  static ngAcceptInputType_matchSize: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  ViewContainerRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  Self,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  coerceElement,\n  BooleanInput\n} from '@angular/cdk/coercion';\nimport {Observable, Observer, Subject, merge} from 'rxjs';\nimport {startWith, take, map, takeUntil, switchMap, tap} from 'rxjs/operators';\nimport {\n  CdkDragDrop,\n  CdkDragEnd,\n  CdkDragEnter,\n  CdkDragExit,\n  CdkDragMove,\n  CdkDragStart,\n  CdkDragRelease,\n} from '../drag-events';\nimport {CDK_DRAG_HANDLE, CdkDragHandle} from './drag-handle';\nimport {CDK_DRAG_PLACEHOLDER, CdkDragPlaceholder} from './drag-placeholder';\nimport {CDK_DRAG_PREVIEW, CdkDragPreview} from './drag-preview';\nimport {CDK_DRAG_PARENT} from '../drag-parent';\nimport {DragRef, Point} from '../drag-ref';\nimport {CDK_DROP_LIST, CdkDropListInternal as CdkDropList} from './drop-list';\nimport {DragDrop} from '../drag-drop';\nimport {CDK_DRAG_CONFIG, DragDropConfig, DragStartDelay, DragAxis} from './config';\n\n/** Element that can be moved inside a CdkDropList container. */\n@Directive({\n  selector: '[cdkDrag]',\n  exportAs: 'cdkDrag',\n  host: {\n    'class': 'cdk-drag',\n    '[class.cdk-drag-disabled]': 'disabled',\n    '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n  },\n  providers: [{provide: CDK_DRAG_PARENT, useExisting: CdkDrag}]\n})\nexport class CdkDrag<T = any> implements AfterViewInit, OnChanges, OnDestroy {\n  private _destroyed = new Subject<void>();\n\n  /** Reference to the underlying drag instance. */\n  _dragRef: DragRef<CdkDrag<T>>;\n\n  /** Elements that can be used to drag the draggable item. */\n  @ContentChildren(CDK_DRAG_HANDLE, {descendants: true}) _handles: QueryList<CdkDragHandle>;\n\n  /** Element that will be used as a template to create the draggable item's preview. */\n  @ContentChild(CDK_DRAG_PREVIEW) _previewTemplate: CdkDragPreview;\n\n  /** Template for placeholder element rendered to show where a draggable would be dropped. */\n  @ContentChild(CDK_DRAG_PLACEHOLDER) _placeholderTemplate: CdkDragPlaceholder;\n\n  /** Arbitrary data to attach to this drag instance. */\n  @Input('cdkDragData') data: T;\n\n  /** Locks the position of the dragged element along the specified axis. */\n  @Input('cdkDragLockAxis') lockAxis: DragAxis;\n\n  /**\n   * Selector that will be used to determine the root draggable element, starting from\n   * the `cdkDrag` element and going up the DOM. Passing an alternate root element is useful\n   * when trying to enable dragging on an element that you might not have access to.\n   */\n  @Input('cdkDragRootElement') rootElementSelector: string;\n\n  /**\n   * Node or selector that will be used to determine the element to which the draggable's\n   * position will be constrained. If a string is passed in, it'll be used as a selector that\n   * will be matched starting from the element's parent and going up the DOM until a match\n   * has been found.\n   */\n  @Input('cdkDragBoundary') boundaryElement: string | ElementRef<HTMLElement> | HTMLElement;\n\n  /**\n   * Amount of milliseconds to wait after the user has put their\n   * pointer down before starting to drag the element.\n   */\n  @Input('cdkDragStartDelay') dragStartDelay: DragStartDelay;\n\n  /**\n   * Sets the position of a `CdkDrag` that is outside of a drop container.\n   * Can be used to restore the element's position for a returning user.\n   */\n  @Input('cdkDragFreeDragPosition') freeDragPosition: {x: number, y: number};\n\n  /** Whether starting to drag this element is disabled. */\n  @Input('cdkDragDisabled')\n  get disabled(): boolean {\n    return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._dragRef.disabled = this._disabled;\n  }\n  private _disabled: boolean;\n\n  /**\n   * Function that can be used to customize the logic of how the position of the drag item\n   * is limited while it's being dragged. Gets called with a point containing the current position\n   * of the user's pointer on the page and should return a point describing where the item should\n   * be rendered.\n   */\n  @Input('cdkDragConstrainPosition') constrainPosition?: (point: Point, dragRef: DragRef) => Point;\n\n  /** Class to be added to the preview element. */\n  @Input('cdkDragPreviewClass') previewClass: string | string[];\n\n  /** Emits when the user starts dragging the item. */\n  @Output('cdkDragStarted') started: EventEmitter<CdkDragStart> = new EventEmitter<CdkDragStart>();\n\n  /** Emits when the user has released a drag item, before any animations have started. */\n  @Output('cdkDragReleased') released: EventEmitter<CdkDragRelease> =\n      new EventEmitter<CdkDragRelease>();\n\n  /** Emits when the user stops dragging an item in the container. */\n  @Output('cdkDragEnded') ended: EventEmitter<CdkDragEnd> = new EventEmitter<CdkDragEnd>();\n\n  /** Emits when the user has moved the item into a new container. */\n  @Output('cdkDragEntered') entered: EventEmitter<CdkDragEnter<any>> =\n      new EventEmitter<CdkDragEnter<any>>();\n\n  /** Emits when the user removes the item its container by dragging it into another container. */\n  @Output('cdkDragExited') exited: EventEmitter<CdkDragExit<any>> =\n      new EventEmitter<CdkDragExit<any>>();\n\n  /** Emits when the user drops the item inside a container. */\n  @Output('cdkDragDropped') dropped: EventEmitter<CdkDragDrop<any>> =\n      new EventEmitter<CdkDragDrop<any>>();\n\n  /**\n   * Emits as the user is dragging the item. Use with caution,\n   * because this event will fire for every pixel that the user has dragged.\n   */\n  @Output('cdkDragMoved') moved: Observable<CdkDragMove<T>> =\n      new Observable((observer: Observer<CdkDragMove<T>>) => {\n        const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n          source: this,\n          pointerPosition: movedEvent.pointerPosition,\n          event: movedEvent.event,\n          delta: movedEvent.delta,\n          distance: movedEvent.distance\n        }))).subscribe(observer);\n\n        return () => {\n          subscription.unsubscribe();\n        };\n      });\n\n  constructor(\n      /** Element that the draggable is attached to. */\n      public element: ElementRef<HTMLElement>,\n      /** Droppable container that the draggable is a part of. */\n      @Inject(CDK_DROP_LIST) @Optional() @SkipSelf() public dropContainer: CdkDropList,\n      @Inject(DOCUMENT) private _document: any, private _ngZone: NgZone,\n      private _viewContainerRef: ViewContainerRef,\n      @Optional() @Inject(CDK_DRAG_CONFIG) config: DragDropConfig,\n      @Optional() private _dir: Directionality, dragDrop: DragDrop,\n      private _changeDetectorRef: ChangeDetectorRef,\n      @Optional() @Self() @Inject(CDK_DRAG_HANDLE) private _selfHandle?: CdkDragHandle) {\n    this._dragRef = dragDrop.createDrag(element, {\n      dragStartThreshold: config && config.dragStartThreshold != null ?\n          config.dragStartThreshold : 5,\n      pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n          config.pointerDirectionChangeThreshold : 5,\n      zIndex: config?.zIndex\n    });\n    this._dragRef.data = this;\n\n    if (config) {\n      this._assignDefaults(config);\n    }\n\n    // Note that usually the container is assigned when the drop list is picks up the item, but in\n    // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n    // where there are no items on the first change detection pass, but the items get picked up as\n    // soon as the user triggers another pass by dragging. This is a problem, because the item would\n    // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n    // is too late since the two modes save different kinds of information. We work around it by\n    // assigning the drop container both from here and the list.\n    if (dropContainer) {\n      this._dragRef._withDropContainer(dropContainer._dropListRef);\n      dropContainer.addItem(this);\n    }\n\n    this._syncInputs(this._dragRef);\n    this._handleEvents(this._dragRef);\n  }\n\n  /**\n   * Returns the element that is being used as a placeholder\n   * while the current element is being dragged.\n   */\n  getPlaceholderElement(): HTMLElement {\n    return this._dragRef.getPlaceholderElement();\n  }\n\n  /** Returns the root draggable element. */\n  getRootElement(): HTMLElement {\n    return this._dragRef.getRootElement();\n  }\n\n  /** Resets a standalone drag item to its initial position. */\n  reset(): void {\n    this._dragRef.reset();\n  }\n\n  /**\n   * Gets the pixel coordinates of the draggable outside of a drop container.\n   */\n  getFreeDragPosition(): {readonly x: number, readonly y: number} {\n    return this._dragRef.getFreeDragPosition();\n  }\n\n  ngAfterViewInit() {\n    // We need to wait for the zone to stabilize, in order for the reference\n    // element to be in the proper place in the DOM. This is mostly relevant\n    // for draggable elements inside portals since they get stamped out in\n    // their original DOM position and then they get transferred to the portal.\n    this._ngZone.onStable\n      .pipe(take(1), takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._updateRootElement();\n\n        // Listen for any newly-added handles.\n        this._handles.changes.pipe(\n          startWith(this._handles),\n          // Sync the new handles with the DragRef.\n          tap((handles: QueryList<CdkDragHandle>) => {\n            const childHandleElements = handles\n              .filter(handle => handle._parentDrag === this)\n              .map(handle => handle.element);\n\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n              childHandleElements.push(this.element);\n            }\n\n            this._dragRef.withHandles(childHandleElements);\n          }),\n          // Listen if the state of any of the handles changes.\n          switchMap((handles: QueryList<CdkDragHandle>) => {\n            return merge(...handles.map(item => {\n              return item._stateChanges.pipe(startWith(item));\n            })) as Observable<CdkDragHandle>;\n          }),\n          takeUntil(this._destroyed)\n        ).subscribe(handleInstance => {\n          // Enabled/disable the handle that changed in the DragRef.\n          const dragRef = this._dragRef;\n          const handle = handleInstance.element.nativeElement;\n          handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n\n        if (this.freeDragPosition) {\n          this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const rootSelectorChange = changes['rootElementSelector'];\n    const positionChange = changes['freeDragPosition'];\n\n    // We don't have to react to the first change since it's being\n    // handled in `ngAfterViewInit` where it needs to be deferred.\n    if (rootSelectorChange && !rootSelectorChange.firstChange) {\n      this._updateRootElement();\n    }\n\n    // Skip the first change since it's being handled in `ngAfterViewInit`.\n    if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n      this._dragRef.setFreeDragPosition(this.freeDragPosition);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.dropContainer) {\n      this.dropContainer.removeItem(this);\n    }\n\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._dragRef.dispose();\n  }\n\n  /** Syncs the root element with the `DragRef`. */\n  private _updateRootElement() {\n    const element = this.element.nativeElement;\n    const rootElement = this.rootElementSelector ?\n        getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n\n    if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`cdkDrag must be attached to an element node. ` +\n                  `Currently attached to \"${rootElement.nodeName}\".`);\n    }\n\n    this._dragRef.withRootElement(rootElement || element);\n  }\n\n  /** Gets the boundary element, based on the `boundaryElement` value. */\n  private _getBoundaryElement() {\n    const boundary = this.boundaryElement;\n\n    if (!boundary) {\n      return null;\n    }\n\n    if (typeof boundary === 'string') {\n      return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n    }\n\n    const element = coerceElement(boundary);\n\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n      !element.contains(this.element.nativeElement)) {\n      throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n    }\n\n    return element;\n  }\n\n  /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n  private _syncInputs(ref: DragRef<CdkDrag<T>>) {\n    ref.beforeStarted.subscribe(() => {\n      if (!ref.isDragging()) {\n        const dir = this._dir;\n        const dragStartDelay = this.dragStartDelay;\n        const placeholder = this._placeholderTemplate ? {\n          template: this._placeholderTemplate.templateRef,\n          context: this._placeholderTemplate.data,\n          viewContainer: this._viewContainerRef\n        } : null;\n        const preview = this._previewTemplate ? {\n          template: this._previewTemplate.templateRef,\n          context: this._previewTemplate.data,\n          matchSize: this._previewTemplate.matchSize,\n          viewContainer: this._viewContainerRef\n        } : null;\n\n        ref.disabled = this.disabled;\n        ref.lockAxis = this.lockAxis;\n        ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n            dragStartDelay : coerceNumberProperty(dragStartDelay);\n        ref.constrainPosition = this.constrainPosition;\n        ref.previewClass = this.previewClass;\n        ref\n          .withBoundaryElement(this._getBoundaryElement())\n          .withPlaceholderTemplate(placeholder)\n          .withPreviewTemplate(preview);\n\n        if (dir) {\n          ref.withDirection(dir.value);\n        }\n      }\n    });\n  }\n\n  /** Handles the events from the underlying `DragRef`. */\n  private _handleEvents(ref: DragRef<CdkDrag<T>>) {\n    ref.started.subscribe(() => {\n      this.started.emit({source: this});\n\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n\n    ref.released.subscribe(() => {\n      this.released.emit({source: this});\n    });\n\n    ref.ended.subscribe(event => {\n      this.ended.emit({source: this, distance: event.distance});\n\n      // Since all of these events run outside of change detection,\n      // we need to ensure that everything is marked correctly.\n      this._changeDetectorRef.markForCheck();\n    });\n\n    ref.entered.subscribe(event => {\n      this.entered.emit({\n        container: event.container.data,\n        item: this,\n        currentIndex: event.currentIndex\n      });\n    });\n\n    ref.exited.subscribe(event => {\n      this.exited.emit({\n        container: event.container.data,\n        item: this\n      });\n    });\n\n    ref.dropped.subscribe(event => {\n      this.dropped.emit({\n        previousIndex: event.previousIndex,\n        currentIndex: event.currentIndex,\n        previousContainer: event.previousContainer.data,\n        container: event.container.data,\n        isPointerOverContainer: event.isPointerOverContainer,\n        item: this,\n        distance: event.distance\n      });\n    });\n  }\n\n  /** Assigns the default input values based on a provided config object. */\n  private _assignDefaults(config: DragDropConfig) {\n    const {\n      lockAxis, dragStartDelay, constrainPosition, previewClass,\n      boundaryElement, draggingDisabled, rootElementSelector\n    } = config;\n\n    this.disabled = draggingDisabled == null ? false : draggingDisabled;\n    this.dragStartDelay = dragStartDelay || 0;\n\n    if (lockAxis) {\n      this.lockAxis = lockAxis;\n    }\n\n    if (constrainPosition) {\n      this.constrainPosition = constrainPosition;\n    }\n\n    if (previewClass) {\n      this.previewClass = previewClass;\n    }\n\n    if (boundaryElement) {\n      this.boundaryElement = boundaryElement;\n    }\n\n    if (rootElementSelector) {\n      this.rootElementSelector = rootElementSelector;\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element: HTMLElement, selector: string) {\n  let currentElement = element.parentElement as HTMLElement | null;\n\n  while (currentElement) {\n    // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n    if (currentElement.matches ? currentElement.matches(selector) :\n        (currentElement as any).msMatchesSelector(selector)) {\n      return currentElement;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {CdkDropList} from './directives/drop-list';\nimport {CdkDropListGroup} from './directives/drop-list-group';\nimport {CdkDrag} from './directives/drag';\nimport {CdkDragHandle} from './directives/drag-handle';\nimport {CdkDragPreview} from './directives/drag-preview';\nimport {CdkDragPlaceholder} from './directives/drag-placeholder';\nimport {DragDrop} from './drag-drop';\n\n@NgModule({\n  declarations: [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  exports: [\n    CdkScrollableModule,\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n  ],\n  providers: [\n    DragDrop,\n  ]\n})\nexport class DragDropModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {DragDrop} from './drag-drop';\nexport {DragRef, DragRefConfig, Point} from './drag-ref';\nexport {DropListRef} from './drop-list-ref';\nexport {CDK_DRAG_PARENT} from './drag-parent';\n\nexport * from './drag-events';\nexport * from './drag-utils';\nexport * from './drag-drop-module';\nexport * from './drag-drop-registry';\n\nexport {CdkDropList, CDK_DROP_LIST} from './directives/drop-list';\nexport * from './directives/config';\nexport * from './directives/drop-list-group';\nexport * from './directives/drag';\nexport * from './directives/drag-handle';\nexport * from './directives/drag-preview';\nexport * from './directives/drag-placeholder';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CdkDropListInternal as Éµangular_material_src_cdk_drag_drop_drag_drop_a} from './directives/drop-list';","export interface HouseModel {\r\n    id?: string;\r\n    userId?: string;\r\n    name?: string;\r\n    tenants?: TenantsModel[];\r\n    type?: string | 'Commune' | 'Flats' | 'Complex/Estate' | 'Town House';\r\n    capacity?: number;\r\n    }\r\n    \r\n    export class HouseModel{\r\n      id?: string;\r\n      userId?: string;\r\n      name?: string;\r\n      tenants?: TenantsModel[];\r\n      type?: string | 'Commune' | 'Flats' | 'Complex/Estate' | 'Town House';\r\n      capacity?: number;\r\n    \r\n      constructor(id: string = '', \r\n      name: string = '',\r\n      type: string = '',\r\n      tenants: TenantsModel[] = [],\r\n      \r\n      capacity: number = 0){\r\n        this.userId = id;\r\n        this.name = name;\r\n        this.tenants = tenants;\r\n        this.type = type;\r\n        this.capacity = capacity;\r\n      }\r\n    }\r\n    \r\n    export interface TenantsModel {\r\n      id?: any;\r\n      name?: string;\r\n      house_id?: any;\r\n      fee?: number;\r\n      label?: string;\r\n      phone_number?: string;\r\n    //   rentPogress?: RentModel[];\r\n     rentPogress?: {\r\n         'jan': number,\r\n         'feb': number,\r\n         'mar': number,\r\n         'apr': number,\r\n         'may': number,\r\n         'jun': number,\r\n         'jul': number,\r\n         'aug': number,\r\n         'sept': number,\r\n         'oct': number,\r\n         'nov': number,\r\n         'dec': number\r\n\r\n\r\n     }\r\n    }\r\n    export class TenantsModel {\r\n        name?: string;\r\n        fee?: number;\r\n        label?: string;\r\n        phone_number?: string;\r\n      //   rentPogress?: RentModel[];\r\n       rentPogress?: {\r\n           'jan': number,\r\n           'feb': number,\r\n           'mar': number,\r\n           'apr': number,\r\n           'may': number,\r\n           'jun': number,\r\n           'jul': number,\r\n           'aug': number,\r\n           'sept': number,\r\n           'oct': number,\r\n           'nov': number,\r\n           'dec': number\r\n       }\r\n       constructor(name: string = '', \r\n       fee: number = 0, \r\n       label: string = '', \r\n       phone_number: string = '', \r\n       rentPogress: any = {}){\r\n        this.name = name;\r\n        this.fee = fee;\r\n        this.label = label;\r\n        this.phone_number = phone_number;\r\n        this.rentPogress = rentPogress;\r\n       }\r\n    }\r\n    export interface RentModel{\r\n      year: number;\r\n      months_paid: MonthsRentModel[]\r\n    }\r\n    export interface MonthsRentModel {\r\n      month: boolean;\r\n      amount: number;\r\n    }\r\n    ","export default \"<h2 class=\\\"titles\\\">Residences</h2>\\r\\n<div \\r\\ncdkDropList\\r\\ncdkDropListOrientation=\\\"horizontal\\\"\\r\\nclass=\\\"boards\\\"\\r\\nstyle=\\\"padding-left: 0;\\\"\\r\\n(cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n<app-house cdkDrag *ngFor=\\\"let house of houses\\\" [house]=\\\"house\\\">\\r\\n    <mat-icon cdkDragHandle class=\\\"handle\\\">drag_indicator</mat-icon>\\r\\n  </app-house>\\r\\n<div class=\\\"board-button\\\">\\r\\n    <button\\r\\n      mat-raised-button\\r\\n      color=\\\"primary\\\"\\r\\n      cdkDragDisabled\\r\\n      (click)=\\\"openHouseDialog()\\\"\\r\\n    >\\r\\n      Add residence\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY2hhcnRzL2NoYXJ0cy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<mat-card class=\\\"outer-card\\\">\\r\\n    <mat-card-header>\\r\\n      <!-- Slot for the handle -->\\r\\n      <div style=\\\"float: right;\\\">\\r\\n        <ng-content></ng-content>\\r\\n      </div>\\r\\n\\r\\n      <mat-card-title \\r\\n        class=\\\"title\\\"\\r\\n      >\\r\\n        {{ house.name }}\\r\\n      </mat-card-title>\\r\\n      <mat-card-subtitle style=\\\"margin-bottom: 0; margin-top: 10px;\\\">\\r\\n        {{ house.type }}\\r\\n      </mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n        \\r\\n    </mat-card-content>\\r\\n    <mat-card-content>\\r\\n        <div\\r\\n        class=\\\"tasks\\\"\\r\\n        cdkDropList\\r\\n        cdkDropListOrientation=\\\"vertical\\\"\\r\\n        \\r\\n      >\\r\\n        <div\\r\\n          class=\\\"inner-card\\\"\\r\\n          *ngFor=\\\"let tenant of house.tenants; let i = index\\\"\\r\\n          (click)=\\\"openDialog(tenant, i)\\\"\\r\\n        >\\r\\n          <mat-card > \\r\\n            <mat-card-header \\r\\n            >\\r\\n            <mat-card-title style=\\\"width: 100%;\\\">\\r\\n             <h3 style=\\\"width: 100%; text-align: center;\\\">{{ tenant.name }}</h3>  \\r\\n            </mat-card-title>\\r\\n          </mat-card-header>  \\r\\n            <mat-card-content>\\r\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                <section>\\r\\n                  <button mat-raised-button>\\r\\n                    <img \\r\\n                    class=\\\"icon-action\\\"\\r\\n                    src=\\\"assets/calendar.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\r\\n                  </button>\\r\\n\\r\\n                </section>\\r\\n                <section >\\r\\n                   <button mat-raised-button>\\r\\n                    <img \\r\\n                    class=\\\"icon-action\\\"\\r\\n                    src=\\\"assets/pencil.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\r\\n                   </button>\\r\\n                </section>\\r\\n\\r\\n                <section>\\r\\n                  <button mat-raised-button>\\r\\n                    <img \\r\\n                    class=\\\"icon-action\\\"\\r\\n                    src=\\\"assets/delete.svg\\\" alt=\\\"\\\" srcset=\\\"\\\">\\r\\n                  </button>\\r\\n\\r\\n                </section>\\r\\n              </div>\\r\\n\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-card-footer style=\\\"margin-left: 10px;\\\">\\r\\n        <button mat-stroked-button (click)=\\\"openDialog()\\\">\\r\\n            <mat-icon>add</mat-icon>\\r\\n          </button>\\r\\n          <div style=\\\"float: right;\\\">\\r\\n            <app-delete \\r\\n          \\r\\n            (delete)=\\\"handleDelete()\\\"></app-delete>\\r\\n          </div>\\r\\n\\r\\n    </mat-card-footer>\\r\\n\\r\\n  </mat-card>\\r\\n  \\r\\n\\r\\n\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport * as Chartist from 'chartist';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  startAnimationForLineChart(chart){\r\n      let seq: any, delays: any, durations: any;\r\n      seq = 0;\r\n      delays = 80;\r\n      durations = 500;\r\n\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'line' || data.type === 'area') {\r\n          data.element.animate({\r\n            d: {\r\n              begin: 600,\r\n              dur: 700,\r\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n              to: data.path.clone().stringify(),\r\n              easing: Chartist.Svg.Easing.easeOutQuint\r\n            }\r\n          });\r\n        } else if(data.type === 'point') {\r\n              seq++;\r\n              data.element.animate({\r\n                opacity: {\r\n                  begin: seq * delays,\r\n                  dur: durations,\r\n                  from: 0,\r\n                  to: 1,\r\n                  easing: 'ease'\r\n                }\r\n              });\r\n          }\r\n      });\r\n\r\n      seq = 0;\r\n  };\r\n  startAnimationForBarChart(chart){\r\n      let seq2: any, delays2: any, durations2: any;\r\n\r\n      seq2 = 0;\r\n      delays2 = 80;\r\n      durations2 = 500;\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'bar'){\r\n            seq2++;\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq2 * delays2,\r\n                dur: durations2,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            });\r\n        }\r\n      });\r\n\r\n      seq2 = 0;\r\n  };\r\n  ngOnInit() {\r\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\r\n\r\n      const dataDailySalesChart: any = {\r\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\r\n          series: [\r\n              [12, 17, 7, 17, 23, 18, 38]\r\n          ]\r\n      };\r\n\r\n     const optionsDailySalesChart: any = {\r\n          lineSmooth: Chartist.Interpolation.cardinal({\r\n              tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\r\n      }\r\n\r\n      var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\r\n\r\n      this.startAnimationForLineChart(dailySalesChart);\r\n\r\n\r\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\r\n\r\n      const dataCompletedTasksChart: any = {\r\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\r\n          series: [\r\n              [230, 750, 450, 300, 280, 240, 200, 190]\r\n          ]\r\n      };\r\n\r\n     const optionsCompletedTasksChart: any = {\r\n          lineSmooth: Chartist.Interpolation.cardinal({\r\n              tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\r\n      }\r\n\r\n      var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);\r\n\r\n      // start animation for the Completed Tasks Chart - Line Chart\r\n      this.startAnimationForLineChart(completedTasksChart);\r\n\r\n\r\n\r\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\r\n\r\n      var datawebsiteViewsChart = {\r\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\r\n        series: [\r\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\r\n\r\n        ]\r\n      };\r\n      var optionswebsiteViewsChart = {\r\n          axisX: {\r\n              showGrid: false\r\n          },\r\n          low: 0,\r\n          high: 1000,\r\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\r\n      };\r\n      var responsiveOptions: any[] = [\r\n        ['screen and (max-width: 640px)', {\r\n          seriesBarDistance: 5,\r\n          axisX: {\r\n            labelInterpolationFnc: function (value) {\r\n              return value[0];\r\n            }\r\n          }\r\n        }]\r\n      ];\r\n      var websiteViewsChart = new Chartist.Bar('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\r\n\r\n      //start animation for the Emails Subscription Chart\r\n      this.startAnimationForBarChart(websiteViewsChart);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-to-do',\r\n  templateUrl: './to-do.component.html',\r\n  styleUrls: ['./to-do.component.css']\r\n})\r\nexport class ToDoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-charts',\r\n  templateUrl: './charts.component.html',\r\n  styleUrls: ['./charts.component.css']\r\n})\r\nexport class ChartsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \".content {\\n  overflow: hidden;\\n  height: auto;\\n  padding: 20px;\\n  width: 100%;\\n}\\n\\nmat-form-field {\\n  width: 100%;\\n}\\n\\ntextarea {\\n  display: block;\\n  width: 100%;\\n}\\n\\n.blue {\\n  color: #71deff;\\n}\\n\\n.green {\\n  color: #36e9b6;\\n}\\n\\n.yellow {\\n  color: #ffcf44;\\n}\\n\\n.purple {\\n  color: #b15cff;\\n}\\n\\n.gray {\\n  color: gray;\\n}\\n\\n.red {\\n  color: #e74a4a;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9jb21wb25lbnRzL2RpYWxvZ3MvZGlhbG9ncy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUNJLFdBQUE7QUFDSjs7QUFFQTtFQUFXLGNBQUE7RUFBZ0IsV0FBQTtBQUczQjs7QUFEQTtFQUFRLGNBQUE7QUFLUjs7QUFKQTtFQUFTLGNBQUE7QUFRVDs7QUFQQTtFQUFVLGNBQUE7QUFXVjs7QUFWQTtFQUFVLGNBQUE7QUFjVjs7QUFiQTtFQUFRLFdBQUE7QUFpQlI7O0FBaEJBO0VBQU8sY0FBQTtBQW9CUCIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY29tcG9uZW50cy9kaWFsb2dzL2RpYWxvZ3Muc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcbnRleHRhcmVhIHsgZGlzcGxheTogYmxvY2s7IHdpZHRoOiAxMDAlOyB9XHJcblxyXG4uYmx1ZSB7IGNvbG9yOiAjNzFkZWZmOyB9XHJcbi5ncmVlbiB7IGNvbG9yOiAjMzZlOWI2OyB9XHJcbi55ZWxsb3cgeyBjb2xvcjogI2ZmY2Y0NDsgfVxyXG4ucHVycGxlIHsgY29sb3I6ICNiMTVjZmY7IH1cclxuLmdyYXkgeyBjb2xvcjogZ3JheTsgfVxyXG4ucmVkIHsgY29sb3I6ICNlNzRhNGE7IH0iXX0= */\";","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatabaseService } from 'app/shared/services/database.service';\r\nimport { UIElementsService } from 'app/shared/services/uielements.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { HouseDialogComponent } from '../dialogs/house-dialog.component';\r\nimport { HouseModel, TenantsModel } from '../../models/house';\r\nimport { Stats } from '../../models/stats';\r\nimport { HouseService } from '../../services/house.service';\r\n\r\n@Component({\r\n  selector: 'app-kanban',\r\n  templateUrl: './kanban.component.html',\r\n  styleUrls: ['./kanban.component.scss']\r\n})\r\nexport class KanbanComponent implements OnInit {\r\n  houses: HouseModel[] = [];\r\n  sub: Subscription = new Subscription();\r\n  constructor(private dialog: MatDialog,\r\n    private databaseService: DatabaseService,\r\n    private afAuth: AngularFireAuth,\r\n    private houseService: HouseService,\r\n    private uiElementsService: UIElementsService) { }\r\n\r\nasync ngOnInit(){\r\n  this.uiElementsService.addSpinner();\r\n  try {\r\n    const user = await this.afAuth.currentUser;    \r\n     this.databaseService.readMultiple('houses', 'userId', user.uid).subscribe((houses) => {\r\n      this.uiElementsService.removeSpinner(); \r\n      this.houses = houses;\r\n       let tenants: number = 0;\r\n       \r\n       houses.forEach((value: HouseModel) => {\r\n         tenants += value.tenants.length;\r\n       });\r\n       const stats = new Stats(tenants, 0, houses.length, 0);\r\n       this.houseService.statsSubject.next(stats);\r\n       console.log(houses);\r\n     })\r\n  } catch (error) {\r\n    this.uiElementsService.addSnackBar(error);\r\n  }\r\n\r\n\r\n  }\r\n  drop(event: CdkDragDrop<string[]>){\r\n    moveItemInArray(this.houses, event.previousIndex, event.currentIndex); \r\n  }\r\n  openHouseDialog(){\r\n    const dialogRef = this.dialog.open(HouseDialogComponent, \r\n      { \r\n        width: '400px',\r\n        data: { }\r\n      });\r\n      dialogRef.afterClosed().subscribe(async (result) => {\r\n        \r\n        if(result){\r\n          this.uiElementsService.addSpinner();\r\n          try {\r\n            const user = await this.afAuth.currentUser;\r\n            const house = new HouseModel(user.uid, result.name, result.type);\r\n           await this.databaseService\r\n            .createGeneric('houses', house);\r\n            \r\n         \r\n            this.uiElementsService.addSnackBar('House added');\r\n          } catch (error) {\r\n            this.uiElementsService.addSnackBar(error);\r\n          }\r\n          this.uiElementsService.removeSpinner();\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n","export default \"@import url(\\\"https://fonts.googleapis.com/css2?family=Montserrat:wght@900&family=Source+Sans+Pro:wght@200&display=swap\\\");\\n.titles {\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n  text-transform: uppercase;\\n  margin-bottom: 0;\\n  text-align: center;\\n}\\n.boards {\\n  width: auto;\\n  padding: 24px;\\n  display: flex;\\n  flex-direction: row;\\n  overflow-x: scroll;\\n}\\n.boards::-webkit-scrollbar {\\n  height: 4px;\\n  width: 4px;\\n}\\n.boards::-webkit-scrollbar-track {\\n  background-color: #000;\\n}\\n.boards::-webkit-scrollbar {\\n  width: 3px;\\n  background-color: #000;\\n}\\n.boards::-webkit-scrollbar-thumb {\\n  background-color: #f5f5f5;\\n  border: 2px solid #555555;\\n}\\n.boards .handle {\\n  position: relative;\\n  top: 5px;\\n  left: 0;\\n  cursor: move;\\n}\\n.cdk-drag-placeholder {\\n  opacity: 0.2;\\n  width: 350px;\\n  border: 5px dashed gray;\\n  margin: 0 10px;\\n}\\n.cdk-drag-animating {\\n  transition: transform 300ms ease;\\n}\\n.boards.cdk-drop-list-dragging .cdk-drag {\\n  transition: transform 300ms ease;\\n}\\n.board-button {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  border: 5px gray dashed;\\n  width: 300px;\\n  padding: 32px;\\n  height: 350px;\\n}\\nmat-card-content {\\n  overflow-y: scroll;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9jb21wb25lbnRzL2thbmJhbi9rYW5iYW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQVEsd0hBQUE7QUFFUjtFQUNFLHFDQUFBO0VBQ0EseUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBQUY7QUFFQTtFQUNJLFdBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUFDSjtBQUFJO0VBQ0UsV0FBQTtFQUNBLFVBQUE7QUFFTjtBQUFJO0VBRUUsc0JBQUE7QUFDTjtBQUNJO0VBQ0UsVUFBQTtFQUNBLHNCQUFBO0FBQ047QUFFSTtFQUNFLHlCQUFBO0VBQ0EseUJBQUE7QUFBTjtBQUdJO0VBQ0Usa0JBQUE7RUFDQSxRQUFBO0VBQ0EsT0FBQTtFQUNBLFlBQUE7QUFETjtBQU1FO0VBQ0UsWUFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLGNBQUE7QUFISjtBQU9FO0VBQ0UsZ0NBQUE7QUFKSjtBQU9FO0VBQ0UsZ0NBQUE7QUFKSjtBQVFFO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0FBTEo7QUFRRTtFQUNFLGtCQUFBO0FBTEoiLCJmaWxlIjoic3JjL2FwcC9wcm9maWxlL2NvbXBvbmVudHMva2FuYmFuL2thbmJhbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vbnRzZXJyYXQ6d2dodEA5MDAmZmFtaWx5PVNvdXJjZStTYW5zK1Bybzp3Z2h0QDIwMCZkaXNwbGF5PXN3YXAnKTtcclxuXHJcbi50aXRsZXN7XHJcbiAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIG1hcmdpbi1ib3R0b206IDA7IFxyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4uYm9hcmRzIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMjRweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgb3ZlcmZsb3cteDogc2Nyb2xsO1xyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgICBoZWlnaHQ6IDRweDtcclxuICAgICAgd2lkdGg6IDRweFxyXG4gICAgfVxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xyXG4gIC8vICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCA2cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgICB3aWR0aDogM3B4O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xyXG4gICAgICBib3JkZXI6IDJweCBzb2xpZCAjNTU1NTU1O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuaGFuZGxlIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB0b3A6IDVweDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgY3Vyc29yOiBtb3ZlO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBcclxuICAuY2RrLWRyYWctcGxhY2Vob2xkZXIge1xyXG4gICAgb3BhY2l0eTogMC4yO1xyXG4gICAgd2lkdGg6IDM1MHB4O1xyXG4gICAgYm9yZGVyOiA1cHggZGFzaGVkIGdyYXk7XHJcbiAgICBtYXJnaW46IDAgMTBweDtcclxuICAgIFxyXG4gIH1cclxuICBcclxuICAuY2RrLWRyYWctYW5pbWF0aW5nIHtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlO1xyXG4gIH1cclxuICBcclxuICAuYm9hcmRzLmNkay1kcm9wLWxpc3QtZHJhZ2dpbmcgLmNkay1kcmFnIHtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlO1xyXG4gIH1cclxuICBcclxuICBcclxuICAuYm9hcmQtYnV0dG9uIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYm9yZGVyOiA1cHggZ3JheSBkYXNoZWQ7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgICBwYWRkaW5nOiAzMnB4O1xyXG4gICAgaGVpZ2h0OiAzNTBweDtcclxuICB9XHJcbiAgXHJcbiAgbWF0LWNhcmQtY29udGVudCB7XHJcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbiAgfSJdfQ== */\";","export default \"<div class=\\\"row\\\">\\r\\n    <!-- <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n        <div class=\\\"card card-stats\\\">\\r\\n            <div class=\\\"card-header card-header-warning card-header-icon\\\">\\r\\n                <div class=\\\"card-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\">person_pin</i>\\r\\n                </div>\\r\\n                <p class=\\\"card-category\\\">No. Tenants</p>\\r\\n                <h3 class=\\\"card-title\\\">\\r\\n                    {{stats.tenants}}\\r\\n                </h3>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons text-success\\\">add_box</i>\\r\\n                    <a href=\\\"javascript:void(0)\\\">Manage</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n        <div class=\\\"card card-stats\\\">\\r\\n            <div class=\\\"card-header card-header-success card-header-icon\\\">\\r\\n                <div class=\\\"card-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\">monetization_on</i>\\r\\n                </div>\\r\\n                <p class=\\\"card-category\\\">Revenue</p>\\r\\n                <h3 class=\\\"card-title\\\">R{{stats.revenue}}</h3>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons\\\">date_range</i> This month\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n        <div class=\\\"card card-stats\\\">\\r\\n            <div class=\\\"card-header card-header-danger card-header-icon\\\">\\r\\n                \\r\\n\\r\\n                <div fxLayout=\\\"column\\\" fxFlexAlign=\\\"center center\\\">\\r\\n                    <section>\\r\\n                        <div class=\\\"card-icon\\\">\\r\\n                            <i class=\\\"material-icons\\\">shop</i>\\r\\n                        </div>\\r\\n                    </section>\\r\\n                    <section>\\r\\n                        <h5 style=\\\"color: #999999;\\\">Residences</h5>\\r\\n                    </section>\\r\\n                    <section>\\r\\n                        <h3 class=\\\"card-title\\\">{{stats.residences}}</h3>\\r\\n                    </section>\\r\\n                </div>\\r\\n\\r\\n                \\r\\n                \\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons\\\">local_offer</i> This month\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n        <div class=\\\"card card-stats\\\">\\r\\n            <div class=\\\"card-header card-header-info card-header-icon\\\">\\r\\n                <div class=\\\"card-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\">money_off</i>\\r\\n                </div>\\r\\n                <p class=\\\"card-category\\\">Outstanding payments</p>\\r\\n                <h3 class=\\\"card-title\\\">{{stats.o_payments}}</h3>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons\\\">update</i> Just Updated\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div> -->\\r\\n    <div *ngFor=\\\"let stat of statsArray\\\" class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\r\\n        <div class=\\\"card card-stats\\\">\\r\\n            <div class=\\\"card-header card-header-icon\\\" [class]=\\\"stat.class\\\">\\r\\n                \\r\\n\\r\\n                <div fxLayout=\\\"column\\\" fxFlexAlign=\\\"center center\\\">\\r\\n                    <section>\\r\\n                        <div class=\\\"card-icon\\\">\\r\\n                            <i class=\\\"material-icons\\\">{{stat.icon}}</i>\\r\\n                        </div>\\r\\n                    </section>\\r\\n                    <section>\\r\\n                        <h5 style=\\\"color: #999999;\\\">{{stat.title}}</h5>\\r\\n                    </section>\\r\\n                    <section>\\r\\n                        <h3 class=\\\"card-title\\\">{{stat.stat}}</h3>\\r\\n                    </section>\\r\\n                </div>\\r\\n\\r\\n                \\r\\n                \\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons\\\">local_offer</i> This month\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY29tcG9uZW50cy90by1kby90by1kby5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { StatsComponent } from './components/stats/stats.component';\r\nimport { ChartsComponent } from './charts/charts.component';\r\nimport { KanbanComponent } from './components/kanban/kanban.component';\r\nimport { HouseComponent } from './components/house/house.component';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport { HouseDialogComponent } from './components/dialogs/house-dialog.component';\r\nimport { DeleteComponent } from './components/dialogs/delete.component';\r\nimport { TenantDialogComponent } from './components/dialogs/tenant-dialog.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ToDoComponent } from './components/to-do/to-do.component';\r\n@NgModule({\r\n  declarations: [DashboardComponent, \r\n    StatsComponent, \r\n    ChartsComponent, \r\n    KanbanComponent,\r\n    HouseDialogComponent, \r\n    HouseComponent, \r\n    DeleteComponent, \r\n    TenantDialogComponent, ToDoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    DragDropModule\r\n  ],\r\n  entryComponents: [HouseDialogComponent]\r\n})\r\nexport class ProfileModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { HouseModel, TenantsModel } from '../../models/house';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { TenantDialogComponent } from '../dialogs/tenant-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DatabaseService } from 'app/shared/services/database.service';\r\nimport { UIElementsService } from 'app/shared/services/uielements.service';\r\n@Component({\r\n  selector: 'app-house',\r\n  templateUrl: './house.component.html',\r\n  styleUrls: ['./house.component.scss']\r\n})\r\nexport class HouseComponent {\r\n  @Input() house: HouseModel;\r\n  \r\n  taskDrop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.house.tenants, event.previousIndex, event.currentIndex);\r\n   \r\n  }\r\n\r\n  openDialog(tenant?: TenantsModel, idx?: number): void {\r\n    const newTenant = { label: 'purple' };\r\n    const dialogRef = this.dialog.open(TenantDialogComponent, {\r\n      width: '500px',\r\n      autoFocus: false, \r\n      maxHeight: '90vh',\r\n      data: tenant\r\n        ? { tenant: { ...tenant }, isNew: false, id: this.house.id, idx }\r\n        : { tenant: newTenant, isNew: true }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(async (result) => {\r\n      if (result) {\r\n        const house_copy: HouseModel = {...this.house};\r\n        if (result.isNew) {\r\n          const tenant = \r\n          new TenantsModel(result.tenant.name, \r\n            result.tenant.fee, \r\n            result.tenant.label, \r\n            result.tenant.phone_number)\r\n          house_copy.tenants.push(result.tenant);\r\n        } else {\r\n          house_copy.tenants.splice(result.idx, 1, result.tenant);\r\n        }\r\n     try {\r\n      await this.databaseService.createWithIdorUpdate('houses' , house_copy, this.house.id);\r\n      this.uiElementsService.addSnackBar('Tenant added!');\r\n     } catch (error) {\r\n      this.uiElementsService.addSnackBar(error);\r\n     }\r\n       \r\n      \r\n      }\r\n    });\r\n  }\r\n\r\nasync handleDelete() {\r\n  try {\r\n    await this.databaseService.delete('houses',this.house.id);\r\n    this.uiElementsService.addSnackBar('Residence deleted');    \r\n    console.log(this.house.id);\r\n  } catch (error) {\r\n    this.uiElementsService.addSnackBar(error);\r\n  }\r\n   await this.databaseService.delete('houses',this.house.id);\r\n  }\r\n\r\n  constructor(private databaseService: DatabaseService, \r\n    private dialog: MatDialog,\r\n    private uiElementsService: UIElementsService\r\n    ) {}\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { DatabaseService } from 'app/shared/services/database.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Stats } from '../../models/stats';\r\nimport { HouseService } from '../../services/house.service';\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.component.html',\r\n  styleUrls: ['./stats.component.css']\r\n})\r\nexport class StatsComponent implements OnInit, OnDestroy {\r\n  stats: Stats = new Stats();\r\n  statsArray: {title?: string; icon?: string; stat?: number, class?: string}[] = this.getItemsList(this.stats);\r\n  subscript: Subscription = new Subscription();\r\n  constructor(private databaseService: DatabaseService,\r\n    private houseService: HouseService) { }\r\n\r\n  ngOnInit(): void {\r\n     this.subscript = this.houseService.statsSubject.subscribe((value) => {\r\n       this.stats = value;\r\n       this.statsArray = this.getItemsList(value);\r\n     })\r\n  }\r\n  ngOnDestroy(){\r\n    this.subscript.unsubscribe();\r\n  }\r\n  getItemsList(stats: Stats){\r\n    return [\r\n      { \r\n        title: 'No. of tenants',\r\n        icon: 'person_pin',\r\n        stat: stats.tenants,\r\n        class: 'card-header-warning'\r\n      }, \r\n      { \r\n        title: 'Revenue',\r\n        icon: 'date_range',\r\n        stat: stats.revenue,\r\n        class: 'card-header-success'\r\n      },\r\n      { \r\n        title: 'Residences',\r\n        icon: 'house',\r\n        stat: stats.residences,\r\n        class: 'card-header-info'\r\n      },\r\n      { \r\n        title: 'Outstanding payments',\r\n        icon: 'money_off',\r\n        stat: stats.o_payments,\r\n        class: 'card-header-danger'\r\n      }]\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HouseService } from 'app/profile/services/house.service';\r\nimport {DatabaseService} from 'app/shared/services/database.service'\r\n@Component({\r\n  selector: 'app-tenant-dialog',\r\n  template: `\r\n    \r\n  <h1 mat-dialog-title>Tenants</h1>\r\n  <mat-dialog-content>\r\n    <form #form=\"ngForm\">\r\n    <p>Name of tenant</p>\r\n    <mat-form-field>\r\n      <input placeholder=\"Name\" matInput \r\n      name=\"name\"\r\n      required\r\n      ngDefaultControl\r\n      [(ngModel)]=\"data.tenant.name\" />\r\n    </mat-form-field>\r\n  \r\n  \r\n  <p>Rent amount</p>\r\n  <mat-form-field appearance=\"fill\">\r\n     <!-- <mat-label>Favorite food</mat-label> -->\r\n     <input placeholder=\"amount\" matInput \r\n      name=\"fee\"\r\n      type=\"number\"\r\n      required\r\n      ngDefaultControl\r\n      [(ngModel)]=\"data.tenant.fee\" />\r\n  </mat-form-field>\r\n  <p>Phone number (optional)</p>\r\n  <mat-form-field appearance=\"fill\">\r\n     <!-- <mat-label>Favorite food</mat-label> -->\r\n     <input placeholder=\"Phone number\" matInput \r\n      name=\"phone\"\r\n      type=\"number\"\r\n      ngDefaultControl\r\n      [(ngModel)]=\"data.tenant.phone_number\" />\r\n  </mat-form-field>\r\n    <br />\r\n    <mat-button-toggle-group\r\n      #group=\"matButtonToggleGroup\"\r\n      [(ngModel)]=\"data.tenant.label\"\r\n      name=\"label\"\r\n    >\r\n      <mat-button-toggle *ngFor=\"let opt of labelOptions\" [value]=\"opt\">\r\n        <mat-icon [ngClass]=\"opt\">{{\r\n          opt === 'gray' ? 'check_circle' : 'lens'\r\n        }}</mat-icon>\r\n      </mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n  <div mat-dialog-actions>\r\n    <button \r\n    [disabled]=\"form.invalid\"\r\n    mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>\r\n      {{ data.isNew ? 'Add Tenant' : 'Update tenant' }}\r\n    </button>\r\n\r\n    <app-delete\r\n      (delete)=\"handleTaskDelete()\"\r\n      *ngIf=\"!data.isNew\"\r\n    ></app-delete>\r\n    <button mat-button (click)=\"dialogRef.close()\" cdkFocusInitial>\r\n      close\r\n    </button>\r\n  </div>\r\n  </form>\r\n  </mat-dialog-content>\r\n  `,\r\n  styleUrls: ['./dialogs.scss']\r\n})\r\nexport class TenantDialogComponent {\r\n  labelOptions = ['purple', 'blue', 'green', 'yellow', 'red', 'gray'];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TenantDialogComponent>,\r\n    private databaseService: DatabaseService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  handleTaskDelete() {\r\n    this.databaseService.removeFromArray('houses' ,this.data.id, this.data.tenant);\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-house-dialog',\r\n  template: `\r\n       <h1 mat-dialog-title>Residence</h1>\r\n    <div mat-dialog-content>\r\n      <form #form=\"ngForm\">\r\n      <p>Name of residence</p>\r\n      <mat-form-field>\r\n        <input placeholder=\"Name\" matInput \r\n        name=\"name\"\r\n        required\r\n        ngDefaultControl\r\n        [(ngModel)]=\"data.name\" />\r\n      </mat-form-field>\r\n    \r\n      <div mat-dialog-content>\r\n    <p>Type of residence</p>\r\n    <mat-form-field appearance=\"fill\">\r\n       <!-- <mat-label>Favorite food</mat-label> -->\r\n        <mat-select [(ngModel)]=\"data.type\"\r\n          ngDefaultControl\r\n          required\r\n          name=\"select\">\r\n          <mat-option *ngFor=\"let type of typeOptions\" \r\n          \r\n          [value]=\"type\">\r\n            {{type}}\r\n          </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n      <button \r\n      [disabled]=\"form.invalid\"\r\n      mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>\r\n        Add\r\n      </button>\r\n    </div>  \r\n    </form>\r\n    \r\n    </div>\r\n    \r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class HouseDialogComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<HouseDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) { }\r\n    typeOptions = ['Commune', 'Flat', 'Town house']\r\n  ngOnInit(): void {\r\n  }\r\n  onNoClick(){\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Stats } from '../models/stats';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HouseService {\r\n  statsSubject: Subject<Stats> = new Subject();\r\n  constructor() { }\r\n}\r\n","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-tabs card-header-primary\\\">\\r\\n                <div class=\\\"nav-tabs-navigation\\\">\\r\\n                    <div class=\\\"nav-tabs-wrapper\\\">\\r\\n                        <span class=\\\"nav-tabs-title\\\">Tasks:</span>\\r\\n                        <ul class=\\\"nav nav-tabs\\\" data-tabs=\\\"tabs\\\">\\r\\n                            <li class=\\\"nav-item\\\">\\r\\n                                <a mat-button class=\\\"nav-link active\\\" href=\\\"#profile\\\" data-toggle=\\\"tab\\\">\\r\\n                                    <i class=\\\"material-icons\\\">bug_report</i> Bugs\\r\\n                                    <div class=\\\"ripple-container\\\"></div>\\r\\n                                </a>\\r\\n                            </li>\\r\\n                            <li class=\\\"nav-item\\\">\\r\\n                                <a mat-button class=\\\"nav-link\\\" href=\\\"#messages\\\" data-toggle=\\\"tab\\\">\\r\\n                                    <i class=\\\"material-icons\\\">code</i> Website\\r\\n                                    <div class=\\\"ripple-container\\\"></div>\\r\\n                                </a>\\r\\n                            </li>\\r\\n                            <li class=\\\"nav-item\\\">\\r\\n                                <a mat-button class=\\\"nav-link\\\" href=\\\"#settings\\\" data-toggle=\\\"tab\\\">\\r\\n                                    <i class=\\\"material-icons\\\">cloud</i> Server\\r\\n                                    <div class=\\\"ripple-container\\\"></div>\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"tab-content\\\">\\r\\n                    <div class=\\\"tab-pane active\\\" id=\\\"profile\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Sign contract for \\\"What are conference organizers afraid of?\\\"</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\\r\\n                                    </td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Create 4 Invisible User Experiences you Never Knew About</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <div class=\\\"tab-pane\\\" id=\\\"messages\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\\r\\n                                    </td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Sign contract for \\\"What are conference organizers afraid of?\\\"</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                    <div class=\\\"tab-pane\\\" id=\\\"settings\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <tbody>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\\r\\n                                    </td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                <tr>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"form-check\\\">\\r\\n                                            <label class=\\\"form-check-label\\\">\\r\\n                                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" checked>\\r\\n                                                <span class=\\\"form-check-sign\\\">\\r\\n                                                    <span class=\\\"check\\\"></span>\\r\\n                                                </span>\\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td>Sign contract for \\\"What are conference organizers afraid of?\\\"</td>\\r\\n                                    <td class=\\\"td-actions text-right\\\">\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">edit</i>\\r\\n                                        </button>\\r\\n                                        <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                            <i class=\\\"material-icons\\\">close</i>\\r\\n                                        </button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-warning\\\">\\r\\n                <h4 class=\\\"card-title\\\">Employees Stats</h4>\\r\\n                <p class=\\\"card-category\\\">New employees on 15th September, 2016</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-body table-responsive\\\">\\r\\n                <table class=\\\"table table-hover\\\">\\r\\n                    <thead class=\\\"text-warning\\\">\\r\\n                        <th>ID</th>\\r\\n                        <th>Name</th>\\r\\n                        <th>Salary</th>\\r\\n                        <th>Country</th>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>1</td>\\r\\n                            <td>Dakota Rice</td>\\r\\n                            <td>$36,738</td>\\r\\n                            <td>Niger</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>2</td>\\r\\n                            <td>Minerva Hooper</td>\\r\\n                            <td>$23,789</td>\\r\\n                            <td>Curaçao</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>3</td>\\r\\n                            <td>Sage Rodriguez</td>\\r\\n                            <td>$56,142</td>\\r\\n                            <td>Netherlands</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>4</td>\\r\\n                            <td>Philip Chaney</td>\\r\\n                            <td>$38,735</td>\\r\\n                            <td>Korea, South</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export interface Stats {\r\n    tenants? : number;\r\n    revenue?: number;\r\n    residences?: number;\r\n    o_payments?: number;\r\n}\r\n\r\nexport class Stats{\r\n    tenants?: number;\r\n    revenue?: number;\r\n    residences?: number;\r\n    o_payments?: number;\r\n\r\n    constructor(tenants: number =0, revenue: number = 0, residences: number = 0, o_payments: number = 0){\r\n        this.residences = residences;\r\n        this.revenue = revenue;\r\n        this.tenants = tenants;\r\n        this.o_payments = o_payments;\r\n    }\r\n}\r\n","export default \"@import url(\\\"https://fonts.googleapis.com/css2?family=Montserrat:wght@900&family=Source+Sans+Pro:wght@200&display=swap\\\");\\n.outer-card {\\n  margin: 0 10px 10px 0;\\n  min-width: 300px;\\n  max-width: 300px;\\n  padding: 10px;\\n  height: 350px;\\n  overflow-y: scroll;\\n}\\n.title {\\n  font-family: \\\"Source Sans Pro\\\", sans-serif;\\n  text-transform: uppercase;\\n  margin-bottom: 0;\\n  text-align: center;\\n}\\n.inner-card {\\n  margin: 5px 0;\\n  cursor: pointer;\\n}\\n.cdk-drag-animating {\\n  transition: transform 300ms ease;\\n}\\n.tasks.cdk-drop-list-dragging .cdk-drag {\\n  transition: transform 300ms ease;\\n}\\n.cdk-drag-placeholder {\\n  opacity: 0.5;\\n}\\n.blue {\\n  background: #71deff;\\n  color: black;\\n}\\n.green {\\n  background: #36e9b6;\\n  color: black;\\n}\\n.yellow {\\n  background: #ffcf44;\\n  color: black;\\n}\\n.purple {\\n  background: #b15cff;\\n}\\n.red {\\n  background: #e74a4a;\\n}\\n.gray {\\n  background: gray;\\n  text-decoration: line-through;\\n}\\nmat-card::ng-deep.mat-card-header-text {\\n  margin: 0 16px;\\n  width: 100%;\\n}\\nmat-card::ng-deep h3 {\\n  margin-top: 0;\\n  font-family: \\\"Montserrat\\\", sans-serif;\\n}\\nmat-card::ng-deep.mat-card-header .mat-card-subtitle:not(:first-child) {\\n  text-align: center;\\n}\\nmat-card {\\n  padding-top: 0;\\n}\\n.icon-action {\\n  max-width: 1.25rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9jb21wb25lbnRzL2hvdXNlL2hvdXNlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFRLHdIQUFBO0FBQ1I7RUFDSSxxQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0FBQ0o7QUFDRTtFQUVFLDBDQUFBO0VBQ0EseUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBQ0o7QUFDRTtFQUNJLGFBQUE7RUFDQSxlQUFBO0FBRU47QUFDRTtFQUNFLGdDQUFBO0FBRUo7QUFDRTtFQUNFLGdDQUFBO0FBRUo7QUFDQTtFQUNFLFlBQUE7QUFFRjtBQUNBO0VBQVEsbUJBQUE7RUFBcUIsWUFBQTtBQUk3QjtBQUhBO0VBQVMsbUJBQUE7RUFBcUIsWUFBQTtBQVE5QjtBQVBBO0VBQVUsbUJBQUE7RUFBcUIsWUFBQTtBQVkvQjtBQVhBO0VBQVUsbUJBQUE7QUFlVjtBQWRBO0VBQU8sbUJBQUE7QUFrQlA7QUFoQkE7RUFBUSxnQkFBQTtFQUFrQiw2QkFBQTtBQXFCMUI7QUFwQkE7RUFDRSxjQUFBO0VBQ0EsV0FBQTtBQXVCRjtBQXJCQTtFQUNFLGFBQUE7RUFDQSxxQ0FBQTtBQXdCRjtBQXRCQTtFQUNFLGtCQUFBO0FBeUJGO0FBdkJBO0VBQ0UsY0FBQTtBQTBCRjtBQXhCQTtFQUNFLGtCQUFBO0FBMkJGIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9jb21wb25lbnRzL2hvdXNlL2hvdXNlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TW9udHNlcnJhdDp3Z2h0QDkwMCZmYW1pbHk9U291cmNlK1NhbnMrUHJvOndnaHRAMjAwJmRpc3BsYXk9c3dhcCcpO1xyXG4ub3V0ZXItY2FyZCB7XHJcbiAgICBtYXJnaW46IDAgMTBweCAxMHB4IDA7XHJcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gIH1cclxuICAudGl0bGV7XHJcbiAgICAvLyBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1mYW1pbHk6ICdTb3VyY2UgU2FucyBQcm8nLCBzYW5zLXNlcmlmO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICAuaW5uZXItY2FyZCB7XHJcbiAgICAgIG1hcmdpbjogNXB4IDA7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcblxyXG4gIC5jZGstZHJhZy1hbmltYXRpbmcge1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2U7XHJcbiAgfVxyXG4gIFxyXG4gIC50YXNrcy5jZGstZHJvcC1saXN0LWRyYWdnaW5nIC5jZGstZHJhZyB7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXMgZWFzZTtcclxuICB9XHJcblxyXG4uY2RrLWRyYWctcGxhY2Vob2xkZXIge1xyXG4gIG9wYWNpdHk6IDAuNTtcclxufVxyXG5cclxuLmJsdWUgeyBiYWNrZ3JvdW5kOiAjNzFkZWZmOyBjb2xvcjogYmxhY2s7IH1cclxuLmdyZWVuIHsgYmFja2dyb3VuZDogIzM2ZTliNjsgY29sb3I6IGJsYWNrOyAgfVxyXG4ueWVsbG93IHsgYmFja2dyb3VuZDogI2ZmY2Y0NDsgY29sb3I6IGJsYWNrOyB9XHJcbi5wdXJwbGUgeyBiYWNrZ3JvdW5kOiAjYjE1Y2ZmOyB9XHJcbi5yZWQgeyBiYWNrZ3JvdW5kOiAjZTc0YTRhOyB9XHJcblxyXG4uZ3JheSB7IGJhY2tncm91bmQ6IGdyYXk7IHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOyB9XHJcbm1hdC1jYXJkOjpuZy1kZWVwLm1hdC1jYXJkLWhlYWRlci10ZXh0IHtcclxuICBtYXJnaW46IDAgMTZweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5tYXQtY2FyZDo6bmctZGVlcCBoMyB7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xyXG59XHJcbm1hdC1jYXJkOjpuZy1kZWVwLm1hdC1jYXJkLWhlYWRlciAubWF0LWNhcmQtc3VidGl0bGU6bm90KDpmaXJzdC1jaGlsZCl7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbm1hdC1jYXJke1xyXG4gIHBhZGRpbmctdG9wOiAwO1xyXG59XHJcbi5pY29uLWFjdGlvbntcclxuICBtYXgtd2lkdGg6IDEuMjVyZW07XHJcbn1cclxuIl19 */\";","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete',\r\n  template: `\r\n   <button mat-button color=\"warn\" (click)=\"canDelete ? deleteBoard() : prepareForDelete()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span *ngIf=\"canDelete\">confirm</span> \r\n</button>\r\n\r\n<button *ngIf=\"canDelete\" mat-button (click)=\"cancel()\">\r\n    Cancel\r\n</button>\r\n  `,\r\n  styles: [`.confirm { min-width: 200px; }`\r\n  ]\r\n})\r\nexport class DeleteComponent {\r\n  canDelete: boolean;\r\n\r\n  @Output() delete = new EventEmitter<boolean>();\r\n\r\n  cancel() {\r\n    this.canDelete = false;\r\n  }\r\n\r\n  prepareForDelete() {\r\n    this.canDelete = true;\r\n  }\r\n\r\n  deleteBoard() {\r\n    this.delete.emit(true);\r\n    this.canDelete = false;\r\n  }\r\n\r\n\r\n}\r\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.4\n * Copyright © 2019 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.4'\n};\n\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(this || global, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(this || global, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(this || global, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var document = globalRoot.document;\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(this || global, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(this || global, Chartist));\n;/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(this || global, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(this || global, Chartist));\n\nreturn Chartist;\n\n}));\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: DashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"card card-chart\\\">\\r\\n            <div class=\\\"card-header card-header-success\\\">\\r\\n                <div class=\\\"ct-chart\\\" id=\\\"dailySalesChart\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title\\\">Daily Sales</h4>\\r\\n                <p class=\\\"card-category\\\">\\r\\n                    <span class=\\\"text-success\\\"><i class=\\\"fa fa-long-arrow-up\\\"></i> 55% </span> increase in today sales.</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons\\\">access_time</i> updated 4 minutes ago\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"card card-chart\\\">\\r\\n            <div class=\\\"card-header card-header-warning\\\">\\r\\n                <div class=\\\"ct-chart\\\" id=\\\"websiteViewsChart\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title\\\">Email Subscriptions</h4>\\r\\n                <p class=\\\"card-category\\\">Last Campaign Performance</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons\\\">access_time</i> campaign sent 2 days ago\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"card card-chart\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n                <div class=\\\"ct-chart\\\" id=\\\"completedTasksChart\\\"></div>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title\\\">Completed Tasks</h4>\\r\\n                <p class=\\\"card-category\\\">Last Campaign Performance</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n                <div class=\\\"stats\\\">\\r\\n                    <i class=\\\"material-icons\\\">access_time</i> campaign sent 2 days ago\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \".card-stats .card-header.card-header-icon .card-title, .card-stats .card-header.card-header-text .card-title, .card-stats .card-header.card-header-icon .card-category, .card-stats .card-header.card-header-text .card-category {\\r\\n    margin: inherit;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9jb21wb25lbnRzL3N0YXRzL3N0YXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9jb21wb25lbnRzL3N0YXRzL3N0YXRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1zdGF0cyAuY2FyZC1oZWFkZXIuY2FyZC1oZWFkZXItaWNvbiAuY2FyZC10aXRsZSwgLmNhcmQtc3RhdHMgLmNhcmQtaGVhZGVyLmNhcmQtaGVhZGVyLXRleHQgLmNhcmQtdGl0bGUsIC5jYXJkLXN0YXRzIC5jYXJkLWhlYWRlci5jYXJkLWhlYWRlci1pY29uIC5jYXJkLWNhdGVnb3J5LCAuY2FyZC1zdGF0cyAuY2FyZC1oZWFkZXIuY2FyZC1oZWFkZXItdGV4dCAuY2FyZC1jYXRlZ29yeSB7XHJcbiAgICBtYXJnaW46IGluaGVyaXQ7XHJcbn0iXX0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n      <app-stats></app-stats>\\r\\n      <!-- <app-charts></app-charts> -->\\r\\n      <app-kanban></app-kanban>\\r\\n      <!-- <app-to-do></app-to-do> -->\\r\\n  </div>\\r\\n</div>\\r\\n\";"],"sourceRoot":"webpack:///"}