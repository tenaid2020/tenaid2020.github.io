{"version":3,"sources":["./src/app/shared/services/database.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AAEgB;AACtB;;IAMnC,yBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAEzD;;;;OAIG;IACL,uCAAa,GAAb,UAAc,UAAkB,EAAE,IAAS;QAC1C,OAAO,IAAI,CAAC,gBAAgB;aAC1B,UAAU,CAAC,UAAU,CAAC;aACtB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD;;;;;OAKG;IACH,8CAAoB,GAApB,UAAqB,UAAkB,EAAE,IAAS,EAAE,EAAU;QAC9D,OAAQ,IAAI,CAAC,gBAAgB;aAC1B,UAAU,CAAC,UAAU,CAAC;aACtB,GAAG,CAAC,EAAE,CAAC;aACP,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;IAC9C,CAAC;IAED,2CAAiB,GAAjB,UAAkB,UAAkB,EAAE,IAAS,EAAE,EAAU,EAAE,SAAiB;IAE9E,CAAC;IACD;;;;OAIG;IACH,gCAAM,GAAN,UAAO,UAAkB,EAAE,EAAU;QACpC,OAAO,IAAI,CAAC,gBAAgB;aAC1B,UAAU,CAAC,UAAU,CAAC;aACtB,GAAG,CAAC,EAAE,CAAC;aACP,MAAM,EAAE,CAAC;IACZ,CAAC;IAED;;;;OAIG;IACH,8BAAI,GAAJ,UAAK,UAAkB,EAAE,EAAU;QACjC,OAAO,IAAI,CAAC,gBAAgB;aAC3B,UAAU,CAAC,UAAU,CAAC;aACtB,GAAG,CAAC,EAAE,CAAC;aACP,YAAY,EAAE;IACjB,CAAC;IACD;;;;;OAKG;IACH,sCAAY,GAAZ,UAAa,UAAkB,EAAE,KAAa,EAAE,KAAU;QACxD,OAAO,IAAI,CAAC,gBAAgB;aAC3B,UAAU,CAAC,UAAU,EAAE,aAAG,IAAI,UAAG,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,EAA7B,CAA6B,CAAC;aAC5D,YAAY,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACnC,CAAC;IACD;;;;;OAKG;IACH,yCAAe,GAAf,UAAgB,UAAkB,EAAE,MAAc,EAAE,KAAU;QAC7D,OAAO,IAAI,CAAC,gBAAgB;aAC1B,UAAU,CAAC,UAAU,CAAC;aACtB,GAAG,CAAC,MAAM,CAAC;aACX,MAAM,CAAC,EAAC,OAAO,EAAE,gDAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC;IAC/E,CAAC;;gBAhFM,wEAAgB;;IAKZ,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGsC,wEAAgB;OAF3C,eAAe,CA6E3B;IAAD,sBAAC;CAAA;AA7E2B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport * as firebase from 'firebase';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DatabaseService {\r\n\r\n  constructor(private angularFirestore: AngularFirestore) { }\r\n\r\n    /**\r\n     * Create with no specific id.\r\n     * @param collection string. The name of the collection.\r\n     * @param data any. The data to be passed in.\r\n     */\r\n  createGeneric(collection: string, data: any){\r\n   return this.angularFirestore\r\n    .collection(collection)\r\n    .add(Object.assign({}, data))\r\n  }\r\n  /**\r\n   * Create with Id specified.\r\n   * @param collection string. The name of the collection.\r\n   * @param data any. The data to be passed in.\r\n   * @param id string. The id of the document\r\n   */\r\n  createWithIdorUpdate(collection: string, data: any, id: string){\r\n  return  this.angularFirestore\r\n    .collection(collection)\r\n    .doc(id)\r\n    .set(Object.assign({}, data), {merge: true})\r\n  }\r\n\r\n  updateSingleField(collection: string, data: any, id: string, fieldName: string){\r\n\r\n  }\r\n  /**\r\n   * Delete an item from the database\r\n   * @param collection string. The name of the collection.\r\n   * @param id string. The value of the id.\r\n   */\r\n  delete(collection: string, id: string){\r\n   return this.angularFirestore\r\n    .collection(collection)\r\n    .doc(id)\r\n    .delete();\r\n  }\r\n\r\n  /**\r\n   * Read particular document from database.\r\n   * @param collection string. The name of the collection.\r\n   * @param id string. The value of the id.\r\n   */\r\n  read(collection: string, id: string){\r\n    return this.angularFirestore\r\n    .collection(collection)\r\n    .doc(id)\r\n    .valueChanges()\r\n  }\r\n  /**\r\n   * Read multiple items from database.\r\n   * @param collection string. The name of the collection.\r\n   * @param field string. The name of the field.\r\n   * @param value any. The value of the field.\r\n   */\r\n  readMultiple(collection: string, field: string, value: any){\r\n    return this.angularFirestore\r\n    .collection(collection, ref => ref.where(field, '==', value))\r\n    .valueChanges({ idField: 'id' });\r\n  }\r\n  /**\r\n   * Remove an item from an array in firebase.\r\n   * @param collection string. The name of the collection.\r\n   * @param dataId string. The Id of the data.\r\n   * @param value any. The value of the item to be removed.\r\n   */\r\n  removeFromArray(collection: string, dataId: string, value: any){\r\n   return this.angularFirestore\r\n    .collection(collection)\r\n    .doc(dataId)\r\n    .update({tenants: firebase.default.firestore.FieldValue.arrayRemove(value)});\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}